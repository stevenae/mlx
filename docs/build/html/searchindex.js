Search.setIndex({"docnames": ["index", "python/_autosummary/mlx.core.Device", "python/_autosummary/mlx.core.Dtype", "python/_autosummary/mlx.core.DtypeCategory", "python/_autosummary/mlx.core.abs", "python/_autosummary/mlx.core.add", "python/_autosummary/mlx.core.addmm", "python/_autosummary/mlx.core.all", "python/_autosummary/mlx.core.allclose", "python/_autosummary/mlx.core.any", "python/_autosummary/mlx.core.arange", "python/_autosummary/mlx.core.arccos", "python/_autosummary/mlx.core.arccosh", "python/_autosummary/mlx.core.arcsin", "python/_autosummary/mlx.core.arcsinh", "python/_autosummary/mlx.core.arctan", "python/_autosummary/mlx.core.arctan2", "python/_autosummary/mlx.core.arctanh", "python/_autosummary/mlx.core.argmax", "python/_autosummary/mlx.core.argmin", "python/_autosummary/mlx.core.argpartition", "python/_autosummary/mlx.core.argsort", "python/_autosummary/mlx.core.array", "python/_autosummary/mlx.core.array.T", "python/_autosummary/mlx.core.array.abs", "python/_autosummary/mlx.core.array.all", "python/_autosummary/mlx.core.array.any", "python/_autosummary/mlx.core.array.argmax", "python/_autosummary/mlx.core.array.argmin", "python/_autosummary/mlx.core.array.astype", "python/_autosummary/mlx.core.array.at", "python/_autosummary/mlx.core.array.conj", "python/_autosummary/mlx.core.array.cos", "python/_autosummary/mlx.core.array.cummax", "python/_autosummary/mlx.core.array.cummin", "python/_autosummary/mlx.core.array.cumprod", "python/_autosummary/mlx.core.array.cumsum", "python/_autosummary/mlx.core.array.diag", "python/_autosummary/mlx.core.array.diagonal", "python/_autosummary/mlx.core.array.dtype", "python/_autosummary/mlx.core.array.exp", "python/_autosummary/mlx.core.array.flatten", "python/_autosummary/mlx.core.array.item", "python/_autosummary/mlx.core.array.itemsize", "python/_autosummary/mlx.core.array.log", "python/_autosummary/mlx.core.array.log10", "python/_autosummary/mlx.core.array.log1p", "python/_autosummary/mlx.core.array.log2", "python/_autosummary/mlx.core.array.logsumexp", "python/_autosummary/mlx.core.array.max", "python/_autosummary/mlx.core.array.mean", "python/_autosummary/mlx.core.array.min", "python/_autosummary/mlx.core.array.moveaxis", "python/_autosummary/mlx.core.array.nbytes", "python/_autosummary/mlx.core.array.ndim", "python/_autosummary/mlx.core.array.prod", "python/_autosummary/mlx.core.array.reciprocal", "python/_autosummary/mlx.core.array.reshape", "python/_autosummary/mlx.core.array.round", "python/_autosummary/mlx.core.array.rsqrt", "python/_autosummary/mlx.core.array.shape", "python/_autosummary/mlx.core.array.sin", "python/_autosummary/mlx.core.array.size", "python/_autosummary/mlx.core.array.split", "python/_autosummary/mlx.core.array.sqrt", "python/_autosummary/mlx.core.array.square", "python/_autosummary/mlx.core.array.squeeze", "python/_autosummary/mlx.core.array.sum", "python/_autosummary/mlx.core.array.swapaxes", "python/_autosummary/mlx.core.array.tolist", "python/_autosummary/mlx.core.array.transpose", "python/_autosummary/mlx.core.array.var", "python/_autosummary/mlx.core.array.view", "python/_autosummary/mlx.core.array_equal", "python/_autosummary/mlx.core.as_strided", "python/_autosummary/mlx.core.atleast_1d", "python/_autosummary/mlx.core.atleast_2d", "python/_autosummary/mlx.core.atleast_3d", "python/_autosummary/mlx.core.bitwise_and", "python/_autosummary/mlx.core.bitwise_or", "python/_autosummary/mlx.core.bitwise_xor", "python/_autosummary/mlx.core.block_masked_mm", "python/_autosummary/mlx.core.broadcast_to", "python/_autosummary/mlx.core.ceil", "python/_autosummary/mlx.core.clip", "python/_autosummary/mlx.core.compile", "python/_autosummary/mlx.core.concatenate", "python/_autosummary/mlx.core.conj", "python/_autosummary/mlx.core.conjugate", "python/_autosummary/mlx.core.conv1d", "python/_autosummary/mlx.core.conv2d", "python/_autosummary/mlx.core.conv3d", "python/_autosummary/mlx.core.conv_general", "python/_autosummary/mlx.core.convolve", "python/_autosummary/mlx.core.cos", "python/_autosummary/mlx.core.cosh", "python/_autosummary/mlx.core.cummax", "python/_autosummary/mlx.core.cummin", "python/_autosummary/mlx.core.cumprod", "python/_autosummary/mlx.core.cumsum", "python/_autosummary/mlx.core.custom_function", "python/_autosummary/mlx.core.default_device", "python/_autosummary/mlx.core.default_stream", "python/_autosummary/mlx.core.degrees", "python/_autosummary/mlx.core.dequantize", "python/_autosummary/mlx.core.diag", "python/_autosummary/mlx.core.diagonal", "python/_autosummary/mlx.core.disable_compile", "python/_autosummary/mlx.core.distributed.Group", "python/_autosummary/mlx.core.distributed.all_gather", "python/_autosummary/mlx.core.distributed.all_sum", "python/_autosummary/mlx.core.distributed.init", "python/_autosummary/mlx.core.distributed.is_available", "python/_autosummary/mlx.core.divide", "python/_autosummary/mlx.core.divmod", "python/_autosummary/mlx.core.einsum", "python/_autosummary/mlx.core.einsum_path", "python/_autosummary/mlx.core.enable_compile", "python/_autosummary/mlx.core.equal", "python/_autosummary/mlx.core.erf", "python/_autosummary/mlx.core.erfinv", "python/_autosummary/mlx.core.eval", "python/_autosummary/mlx.core.exp", "python/_autosummary/mlx.core.expand_dims", "python/_autosummary/mlx.core.expm1", "python/_autosummary/mlx.core.eye", "python/_autosummary/mlx.core.fast.affine_quantize", "python/_autosummary/mlx.core.fast.layer_norm", "python/_autosummary/mlx.core.fast.metal_kernel", "python/_autosummary/mlx.core.fast.rms_norm", "python/_autosummary/mlx.core.fast.rope", "python/_autosummary/mlx.core.fast.scaled_dot_product_attention", "python/_autosummary/mlx.core.fft.fft", "python/_autosummary/mlx.core.fft.fft2", "python/_autosummary/mlx.core.fft.fftn", "python/_autosummary/mlx.core.fft.ifft", "python/_autosummary/mlx.core.fft.ifft2", "python/_autosummary/mlx.core.fft.ifftn", "python/_autosummary/mlx.core.fft.irfft", "python/_autosummary/mlx.core.fft.irfft2", "python/_autosummary/mlx.core.fft.irfftn", "python/_autosummary/mlx.core.fft.rfft", "python/_autosummary/mlx.core.fft.rfft2", "python/_autosummary/mlx.core.fft.rfftn", "python/_autosummary/mlx.core.flatten", "python/_autosummary/mlx.core.floor", "python/_autosummary/mlx.core.floor_divide", "python/_autosummary/mlx.core.full", "python/_autosummary/mlx.core.gather_mm", "python/_autosummary/mlx.core.gather_qmm", "python/_autosummary/mlx.core.grad", "python/_autosummary/mlx.core.greater", "python/_autosummary/mlx.core.greater_equal", "python/_autosummary/mlx.core.hadamard_transform", "python/_autosummary/mlx.core.identity", "python/_autosummary/mlx.core.inner", "python/_autosummary/mlx.core.isclose", "python/_autosummary/mlx.core.isinf", "python/_autosummary/mlx.core.isnan", "python/_autosummary/mlx.core.isneginf", "python/_autosummary/mlx.core.isposinf", "python/_autosummary/mlx.core.issubdtype", "python/_autosummary/mlx.core.jvp", "python/_autosummary/mlx.core.left_shift", "python/_autosummary/mlx.core.less", "python/_autosummary/mlx.core.less_equal", "python/_autosummary/mlx.core.linalg.cholesky", "python/_autosummary/mlx.core.linalg.cholesky_inv", "python/_autosummary/mlx.core.linalg.inv", "python/_autosummary/mlx.core.linalg.norm", "python/_autosummary/mlx.core.linalg.qr", "python/_autosummary/mlx.core.linalg.svd", "python/_autosummary/mlx.core.linalg.tri_inv", "python/_autosummary/mlx.core.linspace", "python/_autosummary/mlx.core.load", "python/_autosummary/mlx.core.log", "python/_autosummary/mlx.core.log10", "python/_autosummary/mlx.core.log1p", "python/_autosummary/mlx.core.log2", "python/_autosummary/mlx.core.logaddexp", "python/_autosummary/mlx.core.logical_and", "python/_autosummary/mlx.core.logical_not", "python/_autosummary/mlx.core.logical_or", "python/_autosummary/mlx.core.logsumexp", "python/_autosummary/mlx.core.matmul", "python/_autosummary/mlx.core.max", "python/_autosummary/mlx.core.maximum", "python/_autosummary/mlx.core.mean", "python/_autosummary/mlx.core.meshgrid", "python/_autosummary/mlx.core.metal.clear_cache", "python/_autosummary/mlx.core.metal.device_info", "python/_autosummary/mlx.core.metal.get_active_memory", "python/_autosummary/mlx.core.metal.get_cache_memory", "python/_autosummary/mlx.core.metal.get_peak_memory", "python/_autosummary/mlx.core.metal.is_available", "python/_autosummary/mlx.core.metal.reset_peak_memory", "python/_autosummary/mlx.core.metal.set_cache_limit", "python/_autosummary/mlx.core.metal.set_memory_limit", "python/_autosummary/mlx.core.metal.start_capture", "python/_autosummary/mlx.core.metal.stop_capture", "python/_autosummary/mlx.core.min", "python/_autosummary/mlx.core.minimum", "python/_autosummary/mlx.core.moveaxis", "python/_autosummary/mlx.core.multiply", "python/_autosummary/mlx.core.nan_to_num", "python/_autosummary/mlx.core.negative", "python/_autosummary/mlx.core.new_stream", "python/_autosummary/mlx.core.not_equal", "python/_autosummary/mlx.core.ones", "python/_autosummary/mlx.core.ones_like", "python/_autosummary/mlx.core.outer", "python/_autosummary/mlx.core.pad", "python/_autosummary/mlx.core.partition", "python/_autosummary/mlx.core.power", "python/_autosummary/mlx.core.prod", "python/_autosummary/mlx.core.quantize", "python/_autosummary/mlx.core.quantized_matmul", "python/_autosummary/mlx.core.radians", "python/_autosummary/mlx.core.random.bernoulli", "python/_autosummary/mlx.core.random.categorical", "python/_autosummary/mlx.core.random.gumbel", "python/_autosummary/mlx.core.random.key", "python/_autosummary/mlx.core.random.laplace", "python/_autosummary/mlx.core.random.multivariate_normal", "python/_autosummary/mlx.core.random.normal", "python/_autosummary/mlx.core.random.randint", "python/_autosummary/mlx.core.random.seed", "python/_autosummary/mlx.core.random.split", "python/_autosummary/mlx.core.random.truncated_normal", "python/_autosummary/mlx.core.random.uniform", "python/_autosummary/mlx.core.reciprocal", "python/_autosummary/mlx.core.remainder", "python/_autosummary/mlx.core.repeat", "python/_autosummary/mlx.core.reshape", "python/_autosummary/mlx.core.right_shift", "python/_autosummary/mlx.core.round", "python/_autosummary/mlx.core.rsqrt", "python/_autosummary/mlx.core.save", "python/_autosummary/mlx.core.save_gguf", "python/_autosummary/mlx.core.save_safetensors", "python/_autosummary/mlx.core.savez", "python/_autosummary/mlx.core.savez_compressed", "python/_autosummary/mlx.core.set_default_device", "python/_autosummary/mlx.core.set_default_stream", "python/_autosummary/mlx.core.sigmoid", "python/_autosummary/mlx.core.sign", "python/_autosummary/mlx.core.sin", "python/_autosummary/mlx.core.sinh", "python/_autosummary/mlx.core.softmax", "python/_autosummary/mlx.core.sort", "python/_autosummary/mlx.core.split", "python/_autosummary/mlx.core.sqrt", "python/_autosummary/mlx.core.square", "python/_autosummary/mlx.core.squeeze", "python/_autosummary/mlx.core.stack", "python/_autosummary/mlx.core.std", "python/_autosummary/mlx.core.stop_gradient", "python/_autosummary/mlx.core.stream", "python/_autosummary/mlx.core.subtract", "python/_autosummary/mlx.core.sum", "python/_autosummary/mlx.core.swapaxes", "python/_autosummary/mlx.core.synchronize", "python/_autosummary/mlx.core.take", "python/_autosummary/mlx.core.take_along_axis", "python/_autosummary/mlx.core.tan", "python/_autosummary/mlx.core.tanh", "python/_autosummary/mlx.core.tensordot", "python/_autosummary/mlx.core.tile", "python/_autosummary/mlx.core.topk", "python/_autosummary/mlx.core.trace", "python/_autosummary/mlx.core.transpose", "python/_autosummary/mlx.core.tri", "python/_autosummary/mlx.core.tril", "python/_autosummary/mlx.core.triu", "python/_autosummary/mlx.core.value_and_grad", "python/_autosummary/mlx.core.var", "python/_autosummary/mlx.core.view", "python/_autosummary/mlx.core.vjp", "python/_autosummary/mlx.core.vmap", "python/_autosummary/mlx.core.where", "python/_autosummary/mlx.core.zeros", "python/_autosummary/mlx.core.zeros_like", "python/_autosummary/mlx.nn.quantize", "python/_autosummary/mlx.nn.value_and_grad", "python/_autosummary/mlx.optimizers.clip_grad_norm", "python/_autosummary/mlx.utils.tree_flatten", "python/_autosummary/mlx.utils.tree_map", "python/_autosummary/mlx.utils.tree_map_with_path", "python/_autosummary/mlx.utils.tree_reduce", "python/_autosummary/mlx.utils.tree_unflatten", "python/_autosummary/stream_class", "python/array", "python/data_types", "python/devices_and_streams", "python/distributed", "python/fast", "python/fft", "python/linalg", "python/metal", "python/nn", "python/ops", "python/optimizers", "python/random", "python/transforms", "python/tree_utils", "usage/compile", "usage/distributed", "usage/function_transforms", "usage/indexing", "usage/lazy_evaluation", "usage/numpy", "usage/quick_start", "usage/saving_and_loading", "usage/unified_memory", "usage/using_streams"], "filenames": ["index.rst", "python/_autosummary/mlx.core.Device.rst", "python/_autosummary/mlx.core.Dtype.rst", "python/_autosummary/mlx.core.DtypeCategory.rst", "python/_autosummary/mlx.core.abs.rst", "python/_autosummary/mlx.core.add.rst", "python/_autosummary/mlx.core.addmm.rst", "python/_autosummary/mlx.core.all.rst", "python/_autosummary/mlx.core.allclose.rst", "python/_autosummary/mlx.core.any.rst", "python/_autosummary/mlx.core.arange.rst", "python/_autosummary/mlx.core.arccos.rst", "python/_autosummary/mlx.core.arccosh.rst", "python/_autosummary/mlx.core.arcsin.rst", "python/_autosummary/mlx.core.arcsinh.rst", "python/_autosummary/mlx.core.arctan.rst", "python/_autosummary/mlx.core.arctan2.rst", "python/_autosummary/mlx.core.arctanh.rst", "python/_autosummary/mlx.core.argmax.rst", "python/_autosummary/mlx.core.argmin.rst", "python/_autosummary/mlx.core.argpartition.rst", "python/_autosummary/mlx.core.argsort.rst", "python/_autosummary/mlx.core.array.rst", "python/_autosummary/mlx.core.array.T.rst", "python/_autosummary/mlx.core.array.abs.rst", "python/_autosummary/mlx.core.array.all.rst", "python/_autosummary/mlx.core.array.any.rst", "python/_autosummary/mlx.core.array.argmax.rst", "python/_autosummary/mlx.core.array.argmin.rst", "python/_autosummary/mlx.core.array.astype.rst", "python/_autosummary/mlx.core.array.at.rst", "python/_autosummary/mlx.core.array.conj.rst", "python/_autosummary/mlx.core.array.cos.rst", "python/_autosummary/mlx.core.array.cummax.rst", "python/_autosummary/mlx.core.array.cummin.rst", "python/_autosummary/mlx.core.array.cumprod.rst", "python/_autosummary/mlx.core.array.cumsum.rst", "python/_autosummary/mlx.core.array.diag.rst", "python/_autosummary/mlx.core.array.diagonal.rst", "python/_autosummary/mlx.core.array.dtype.rst", "python/_autosummary/mlx.core.array.exp.rst", "python/_autosummary/mlx.core.array.flatten.rst", "python/_autosummary/mlx.core.array.item.rst", "python/_autosummary/mlx.core.array.itemsize.rst", "python/_autosummary/mlx.core.array.log.rst", "python/_autosummary/mlx.core.array.log10.rst", "python/_autosummary/mlx.core.array.log1p.rst", "python/_autosummary/mlx.core.array.log2.rst", "python/_autosummary/mlx.core.array.logsumexp.rst", "python/_autosummary/mlx.core.array.max.rst", "python/_autosummary/mlx.core.array.mean.rst", "python/_autosummary/mlx.core.array.min.rst", "python/_autosummary/mlx.core.array.moveaxis.rst", "python/_autosummary/mlx.core.array.nbytes.rst", "python/_autosummary/mlx.core.array.ndim.rst", "python/_autosummary/mlx.core.array.prod.rst", "python/_autosummary/mlx.core.array.reciprocal.rst", "python/_autosummary/mlx.core.array.reshape.rst", "python/_autosummary/mlx.core.array.round.rst", "python/_autosummary/mlx.core.array.rsqrt.rst", "python/_autosummary/mlx.core.array.shape.rst", "python/_autosummary/mlx.core.array.sin.rst", "python/_autosummary/mlx.core.array.size.rst", "python/_autosummary/mlx.core.array.split.rst", "python/_autosummary/mlx.core.array.sqrt.rst", "python/_autosummary/mlx.core.array.square.rst", "python/_autosummary/mlx.core.array.squeeze.rst", "python/_autosummary/mlx.core.array.sum.rst", "python/_autosummary/mlx.core.array.swapaxes.rst", "python/_autosummary/mlx.core.array.tolist.rst", "python/_autosummary/mlx.core.array.transpose.rst", "python/_autosummary/mlx.core.array.var.rst", "python/_autosummary/mlx.core.array.view.rst", "python/_autosummary/mlx.core.array_equal.rst", "python/_autosummary/mlx.core.as_strided.rst", "python/_autosummary/mlx.core.atleast_1d.rst", "python/_autosummary/mlx.core.atleast_2d.rst", "python/_autosummary/mlx.core.atleast_3d.rst", "python/_autosummary/mlx.core.bitwise_and.rst", "python/_autosummary/mlx.core.bitwise_or.rst", "python/_autosummary/mlx.core.bitwise_xor.rst", "python/_autosummary/mlx.core.block_masked_mm.rst", "python/_autosummary/mlx.core.broadcast_to.rst", "python/_autosummary/mlx.core.ceil.rst", "python/_autosummary/mlx.core.clip.rst", "python/_autosummary/mlx.core.compile.rst", "python/_autosummary/mlx.core.concatenate.rst", "python/_autosummary/mlx.core.conj.rst", "python/_autosummary/mlx.core.conjugate.rst", "python/_autosummary/mlx.core.conv1d.rst", "python/_autosummary/mlx.core.conv2d.rst", "python/_autosummary/mlx.core.conv3d.rst", "python/_autosummary/mlx.core.conv_general.rst", "python/_autosummary/mlx.core.convolve.rst", "python/_autosummary/mlx.core.cos.rst", "python/_autosummary/mlx.core.cosh.rst", "python/_autosummary/mlx.core.cummax.rst", "python/_autosummary/mlx.core.cummin.rst", "python/_autosummary/mlx.core.cumprod.rst", "python/_autosummary/mlx.core.cumsum.rst", "python/_autosummary/mlx.core.custom_function.rst", "python/_autosummary/mlx.core.default_device.rst", "python/_autosummary/mlx.core.default_stream.rst", "python/_autosummary/mlx.core.degrees.rst", "python/_autosummary/mlx.core.dequantize.rst", "python/_autosummary/mlx.core.diag.rst", "python/_autosummary/mlx.core.diagonal.rst", "python/_autosummary/mlx.core.disable_compile.rst", "python/_autosummary/mlx.core.distributed.Group.rst", "python/_autosummary/mlx.core.distributed.all_gather.rst", "python/_autosummary/mlx.core.distributed.all_sum.rst", "python/_autosummary/mlx.core.distributed.init.rst", "python/_autosummary/mlx.core.distributed.is_available.rst", "python/_autosummary/mlx.core.divide.rst", "python/_autosummary/mlx.core.divmod.rst", "python/_autosummary/mlx.core.einsum.rst", "python/_autosummary/mlx.core.einsum_path.rst", "python/_autosummary/mlx.core.enable_compile.rst", "python/_autosummary/mlx.core.equal.rst", "python/_autosummary/mlx.core.erf.rst", "python/_autosummary/mlx.core.erfinv.rst", "python/_autosummary/mlx.core.eval.rst", "python/_autosummary/mlx.core.exp.rst", "python/_autosummary/mlx.core.expand_dims.rst", "python/_autosummary/mlx.core.expm1.rst", "python/_autosummary/mlx.core.eye.rst", "python/_autosummary/mlx.core.fast.affine_quantize.rst", "python/_autosummary/mlx.core.fast.layer_norm.rst", "python/_autosummary/mlx.core.fast.metal_kernel.rst", "python/_autosummary/mlx.core.fast.rms_norm.rst", "python/_autosummary/mlx.core.fast.rope.rst", "python/_autosummary/mlx.core.fast.scaled_dot_product_attention.rst", "python/_autosummary/mlx.core.fft.fft.rst", "python/_autosummary/mlx.core.fft.fft2.rst", "python/_autosummary/mlx.core.fft.fftn.rst", "python/_autosummary/mlx.core.fft.ifft.rst", "python/_autosummary/mlx.core.fft.ifft2.rst", "python/_autosummary/mlx.core.fft.ifftn.rst", "python/_autosummary/mlx.core.fft.irfft.rst", "python/_autosummary/mlx.core.fft.irfft2.rst", "python/_autosummary/mlx.core.fft.irfftn.rst", "python/_autosummary/mlx.core.fft.rfft.rst", "python/_autosummary/mlx.core.fft.rfft2.rst", "python/_autosummary/mlx.core.fft.rfftn.rst", "python/_autosummary/mlx.core.flatten.rst", "python/_autosummary/mlx.core.floor.rst", "python/_autosummary/mlx.core.floor_divide.rst", "python/_autosummary/mlx.core.full.rst", "python/_autosummary/mlx.core.gather_mm.rst", "python/_autosummary/mlx.core.gather_qmm.rst", "python/_autosummary/mlx.core.grad.rst", "python/_autosummary/mlx.core.greater.rst", "python/_autosummary/mlx.core.greater_equal.rst", "python/_autosummary/mlx.core.hadamard_transform.rst", "python/_autosummary/mlx.core.identity.rst", "python/_autosummary/mlx.core.inner.rst", "python/_autosummary/mlx.core.isclose.rst", "python/_autosummary/mlx.core.isinf.rst", "python/_autosummary/mlx.core.isnan.rst", "python/_autosummary/mlx.core.isneginf.rst", "python/_autosummary/mlx.core.isposinf.rst", "python/_autosummary/mlx.core.issubdtype.rst", "python/_autosummary/mlx.core.jvp.rst", "python/_autosummary/mlx.core.left_shift.rst", "python/_autosummary/mlx.core.less.rst", "python/_autosummary/mlx.core.less_equal.rst", "python/_autosummary/mlx.core.linalg.cholesky.rst", "python/_autosummary/mlx.core.linalg.cholesky_inv.rst", "python/_autosummary/mlx.core.linalg.inv.rst", "python/_autosummary/mlx.core.linalg.norm.rst", "python/_autosummary/mlx.core.linalg.qr.rst", "python/_autosummary/mlx.core.linalg.svd.rst", "python/_autosummary/mlx.core.linalg.tri_inv.rst", "python/_autosummary/mlx.core.linspace.rst", "python/_autosummary/mlx.core.load.rst", "python/_autosummary/mlx.core.log.rst", "python/_autosummary/mlx.core.log10.rst", "python/_autosummary/mlx.core.log1p.rst", "python/_autosummary/mlx.core.log2.rst", "python/_autosummary/mlx.core.logaddexp.rst", "python/_autosummary/mlx.core.logical_and.rst", "python/_autosummary/mlx.core.logical_not.rst", "python/_autosummary/mlx.core.logical_or.rst", "python/_autosummary/mlx.core.logsumexp.rst", "python/_autosummary/mlx.core.matmul.rst", "python/_autosummary/mlx.core.max.rst", "python/_autosummary/mlx.core.maximum.rst", "python/_autosummary/mlx.core.mean.rst", "python/_autosummary/mlx.core.meshgrid.rst", "python/_autosummary/mlx.core.metal.clear_cache.rst", "python/_autosummary/mlx.core.metal.device_info.rst", "python/_autosummary/mlx.core.metal.get_active_memory.rst", "python/_autosummary/mlx.core.metal.get_cache_memory.rst", "python/_autosummary/mlx.core.metal.get_peak_memory.rst", "python/_autosummary/mlx.core.metal.is_available.rst", "python/_autosummary/mlx.core.metal.reset_peak_memory.rst", "python/_autosummary/mlx.core.metal.set_cache_limit.rst", "python/_autosummary/mlx.core.metal.set_memory_limit.rst", "python/_autosummary/mlx.core.metal.start_capture.rst", "python/_autosummary/mlx.core.metal.stop_capture.rst", "python/_autosummary/mlx.core.min.rst", "python/_autosummary/mlx.core.minimum.rst", "python/_autosummary/mlx.core.moveaxis.rst", "python/_autosummary/mlx.core.multiply.rst", "python/_autosummary/mlx.core.nan_to_num.rst", "python/_autosummary/mlx.core.negative.rst", "python/_autosummary/mlx.core.new_stream.rst", "python/_autosummary/mlx.core.not_equal.rst", "python/_autosummary/mlx.core.ones.rst", "python/_autosummary/mlx.core.ones_like.rst", "python/_autosummary/mlx.core.outer.rst", "python/_autosummary/mlx.core.pad.rst", "python/_autosummary/mlx.core.partition.rst", "python/_autosummary/mlx.core.power.rst", "python/_autosummary/mlx.core.prod.rst", "python/_autosummary/mlx.core.quantize.rst", "python/_autosummary/mlx.core.quantized_matmul.rst", "python/_autosummary/mlx.core.radians.rst", "python/_autosummary/mlx.core.random.bernoulli.rst", "python/_autosummary/mlx.core.random.categorical.rst", "python/_autosummary/mlx.core.random.gumbel.rst", "python/_autosummary/mlx.core.random.key.rst", "python/_autosummary/mlx.core.random.laplace.rst", "python/_autosummary/mlx.core.random.multivariate_normal.rst", "python/_autosummary/mlx.core.random.normal.rst", "python/_autosummary/mlx.core.random.randint.rst", "python/_autosummary/mlx.core.random.seed.rst", "python/_autosummary/mlx.core.random.split.rst", "python/_autosummary/mlx.core.random.truncated_normal.rst", "python/_autosummary/mlx.core.random.uniform.rst", "python/_autosummary/mlx.core.reciprocal.rst", "python/_autosummary/mlx.core.remainder.rst", "python/_autosummary/mlx.core.repeat.rst", "python/_autosummary/mlx.core.reshape.rst", "python/_autosummary/mlx.core.right_shift.rst", "python/_autosummary/mlx.core.round.rst", "python/_autosummary/mlx.core.rsqrt.rst", "python/_autosummary/mlx.core.save.rst", "python/_autosummary/mlx.core.save_gguf.rst", "python/_autosummary/mlx.core.save_safetensors.rst", "python/_autosummary/mlx.core.savez.rst", "python/_autosummary/mlx.core.savez_compressed.rst", "python/_autosummary/mlx.core.set_default_device.rst", "python/_autosummary/mlx.core.set_default_stream.rst", "python/_autosummary/mlx.core.sigmoid.rst", "python/_autosummary/mlx.core.sign.rst", "python/_autosummary/mlx.core.sin.rst", "python/_autosummary/mlx.core.sinh.rst", "python/_autosummary/mlx.core.softmax.rst", "python/_autosummary/mlx.core.sort.rst", "python/_autosummary/mlx.core.split.rst", "python/_autosummary/mlx.core.sqrt.rst", "python/_autosummary/mlx.core.square.rst", "python/_autosummary/mlx.core.squeeze.rst", "python/_autosummary/mlx.core.stack.rst", "python/_autosummary/mlx.core.std.rst", "python/_autosummary/mlx.core.stop_gradient.rst", "python/_autosummary/mlx.core.stream.rst", "python/_autosummary/mlx.core.subtract.rst", "python/_autosummary/mlx.core.sum.rst", "python/_autosummary/mlx.core.swapaxes.rst", "python/_autosummary/mlx.core.synchronize.rst", "python/_autosummary/mlx.core.take.rst", "python/_autosummary/mlx.core.take_along_axis.rst", "python/_autosummary/mlx.core.tan.rst", "python/_autosummary/mlx.core.tanh.rst", "python/_autosummary/mlx.core.tensordot.rst", "python/_autosummary/mlx.core.tile.rst", "python/_autosummary/mlx.core.topk.rst", "python/_autosummary/mlx.core.trace.rst", "python/_autosummary/mlx.core.transpose.rst", "python/_autosummary/mlx.core.tri.rst", "python/_autosummary/mlx.core.tril.rst", "python/_autosummary/mlx.core.triu.rst", "python/_autosummary/mlx.core.value_and_grad.rst", "python/_autosummary/mlx.core.var.rst", "python/_autosummary/mlx.core.view.rst", "python/_autosummary/mlx.core.vjp.rst", "python/_autosummary/mlx.core.vmap.rst", "python/_autosummary/mlx.core.where.rst", "python/_autosummary/mlx.core.zeros.rst", "python/_autosummary/mlx.core.zeros_like.rst", "python/_autosummary/mlx.nn.quantize.rst", "python/_autosummary/mlx.nn.value_and_grad.rst", "python/_autosummary/mlx.optimizers.clip_grad_norm.rst", "python/_autosummary/mlx.utils.tree_flatten.rst", "python/_autosummary/mlx.utils.tree_map.rst", "python/_autosummary/mlx.utils.tree_map_with_path.rst", "python/_autosummary/mlx.utils.tree_reduce.rst", "python/_autosummary/mlx.utils.tree_unflatten.rst", "python/_autosummary/stream_class.rst", "python/array.rst", "python/data_types.rst", "python/devices_and_streams.rst", "python/distributed.rst", "python/fast.rst", "python/fft.rst", "python/linalg.rst", "python/metal.rst", "python/nn.rst", "python/ops.rst", "python/optimizers.rst", "python/random.rst", "python/transforms.rst", "python/tree_utils.rst", "usage/compile.rst", "usage/distributed.rst", "usage/function_transforms.rst", "usage/indexing.rst", "usage/lazy_evaluation.rst", "usage/numpy.rst", "usage/quick_start.rst", "usage/saving_and_loading.rst", "usage/unified_memory.rst", "usage/using_streams.rst"], "titles": ["MLX", "mlx.core.Device", "mlx.core.Dtype", "mlx.core.DtypeCategory", "mlx.core.abs", "mlx.core.add", "mlx.core.addmm", "mlx.core.all", "mlx.core.allclose", "mlx.core.any", "mlx.core.arange", "mlx.core.arccos", "mlx.core.arccosh", "mlx.core.arcsin", "mlx.core.arcsinh", "mlx.core.arctan", "mlx.core.arctan2", "mlx.core.arctanh", "mlx.core.argmax", "mlx.core.argmin", "mlx.core.argpartition", "mlx.core.argsort", "mlx.core.array", "mlx.core.array.T", "mlx.core.array.abs", "mlx.core.array.all", "mlx.core.array.any", "mlx.core.array.argmax", "mlx.core.array.argmin", "mlx.core.array.astype", "mlx.core.array.at", "mlx.core.array.conj", "mlx.core.array.cos", "mlx.core.array.cummax", "mlx.core.array.cummin", "mlx.core.array.cumprod", "mlx.core.array.cumsum", "mlx.core.array.diag", "mlx.core.array.diagonal", "mlx.core.array.dtype", "mlx.core.array.exp", "mlx.core.array.flatten", "mlx.core.array.item", "mlx.core.array.itemsize", "mlx.core.array.log", "mlx.core.array.log10", "mlx.core.array.log1p", "mlx.core.array.log2", "mlx.core.array.logsumexp", "mlx.core.array.max", "mlx.core.array.mean", "mlx.core.array.min", "mlx.core.array.moveaxis", "mlx.core.array.nbytes", "mlx.core.array.ndim", "mlx.core.array.prod", "mlx.core.array.reciprocal", "mlx.core.array.reshape", "mlx.core.array.round", "mlx.core.array.rsqrt", "mlx.core.array.shape", "mlx.core.array.sin", "mlx.core.array.size", "mlx.core.array.split", "mlx.core.array.sqrt", "mlx.core.array.square", "mlx.core.array.squeeze", "mlx.core.array.sum", "mlx.core.array.swapaxes", "mlx.core.array.tolist", "mlx.core.array.transpose", "mlx.core.array.var", "mlx.core.array.view", "mlx.core.array_equal", "mlx.core.as_strided", "mlx.core.atleast_1d", "mlx.core.atleast_2d", "mlx.core.atleast_3d", "mlx.core.bitwise_and", "mlx.core.bitwise_or", "mlx.core.bitwise_xor", "mlx.core.block_masked_mm", "mlx.core.broadcast_to", "mlx.core.ceil", "mlx.core.clip", "mlx.core.compile", "mlx.core.concatenate", "mlx.core.conj", "mlx.core.conjugate", "mlx.core.conv1d", "mlx.core.conv2d", "mlx.core.conv3d", "mlx.core.conv_general", "mlx.core.convolve", "mlx.core.cos", "mlx.core.cosh", "mlx.core.cummax", "mlx.core.cummin", "mlx.core.cumprod", "mlx.core.cumsum", "mlx.core.custom_function", "mlx.core.default_device", "mlx.core.default_stream", "mlx.core.degrees", "mlx.core.dequantize", "mlx.core.diag", "mlx.core.diagonal", "mlx.core.disable_compile", "mlx.core.distributed.Group", "mlx.core.distributed.all_gather", "mlx.core.distributed.all_sum", "mlx.core.distributed.init", "mlx.core.distributed.is_available", "mlx.core.divide", "mlx.core.divmod", "mlx.core.einsum", "mlx.core.einsum_path", "mlx.core.enable_compile", "mlx.core.equal", "mlx.core.erf", "mlx.core.erfinv", "mlx.core.eval", "mlx.core.exp", "mlx.core.expand_dims", "mlx.core.expm1", "mlx.core.eye", "mlx.core.fast.affine_quantize", "mlx.core.fast.layer_norm", "mlx.core.fast.metal_kernel", "mlx.core.fast.rms_norm", "mlx.core.fast.rope", "mlx.core.fast.scaled_dot_product_attention", "mlx.core.fft.fft", "mlx.core.fft.fft2", "mlx.core.fft.fftn", "mlx.core.fft.ifft", "mlx.core.fft.ifft2", "mlx.core.fft.ifftn", "mlx.core.fft.irfft", "mlx.core.fft.irfft2", "mlx.core.fft.irfftn", "mlx.core.fft.rfft", "mlx.core.fft.rfft2", "mlx.core.fft.rfftn", "mlx.core.flatten", "mlx.core.floor", "mlx.core.floor_divide", "mlx.core.full", "mlx.core.gather_mm", "mlx.core.gather_qmm", "mlx.core.grad", "mlx.core.greater", "mlx.core.greater_equal", "mlx.core.hadamard_transform", "mlx.core.identity", "mlx.core.inner", "mlx.core.isclose", "mlx.core.isinf", "mlx.core.isnan", "mlx.core.isneginf", "mlx.core.isposinf", "mlx.core.issubdtype", "mlx.core.jvp", "mlx.core.left_shift", "mlx.core.less", "mlx.core.less_equal", "mlx.core.linalg.cholesky", "mlx.core.linalg.cholesky_inv", "mlx.core.linalg.inv", "mlx.core.linalg.norm", "mlx.core.linalg.qr", "mlx.core.linalg.svd", "mlx.core.linalg.tri_inv", "mlx.core.linspace", "mlx.core.load", "mlx.core.log", "mlx.core.log10", "mlx.core.log1p", "mlx.core.log2", "mlx.core.logaddexp", "mlx.core.logical_and", "mlx.core.logical_not", "mlx.core.logical_or", "mlx.core.logsumexp", "mlx.core.matmul", "mlx.core.max", "mlx.core.maximum", "mlx.core.mean", "mlx.core.meshgrid", "mlx.core.metal.clear_cache", "mlx.core.metal.device_info", "mlx.core.metal.get_active_memory", "mlx.core.metal.get_cache_memory", "mlx.core.metal.get_peak_memory", "mlx.core.metal.is_available", "mlx.core.metal.reset_peak_memory", "mlx.core.metal.set_cache_limit", "mlx.core.metal.set_memory_limit", "mlx.core.metal.start_capture", "mlx.core.metal.stop_capture", "mlx.core.min", "mlx.core.minimum", "mlx.core.moveaxis", "mlx.core.multiply", "mlx.core.nan_to_num", "mlx.core.negative", "mlx.core.new_stream", "mlx.core.not_equal", "mlx.core.ones", "mlx.core.ones_like", "mlx.core.outer", "mlx.core.pad", "mlx.core.partition", "mlx.core.power", "mlx.core.prod", "mlx.core.quantize", "mlx.core.quantized_matmul", "mlx.core.radians", "mlx.core.random.bernoulli", "mlx.core.random.categorical", "mlx.core.random.gumbel", "mlx.core.random.key", "mlx.core.random.laplace", "mlx.core.random.multivariate_normal", "mlx.core.random.normal", "mlx.core.random.randint", "mlx.core.random.seed", "mlx.core.random.split", "mlx.core.random.truncated_normal", "mlx.core.random.uniform", "mlx.core.reciprocal", "mlx.core.remainder", "mlx.core.repeat", "mlx.core.reshape", "mlx.core.right_shift", "mlx.core.round", "mlx.core.rsqrt", "mlx.core.save", "mlx.core.save_gguf", "mlx.core.save_safetensors", "mlx.core.savez", "mlx.core.savez_compressed", "mlx.core.set_default_device", "mlx.core.set_default_stream", "mlx.core.sigmoid", "mlx.core.sign", "mlx.core.sin", "mlx.core.sinh", "mlx.core.softmax", "mlx.core.sort", "mlx.core.split", "mlx.core.sqrt", "mlx.core.square", "mlx.core.squeeze", "mlx.core.stack", "mlx.core.std", "mlx.core.stop_gradient", "mlx.core.stream", "mlx.core.subtract", "mlx.core.sum", "mlx.core.swapaxes", "mlx.core.synchronize", "mlx.core.take", "mlx.core.take_along_axis", "mlx.core.tan", "mlx.core.tanh", "mlx.core.tensordot", "mlx.core.tile", "mlx.core.topk", "mlx.core.trace", "mlx.core.transpose", "mlx.core.tri", "mlx.core.tril", "mlx.core.triu", "mlx.core.value_and_grad", "mlx.core.var", "mlx.core.view", "mlx.core.vjp", "mlx.core.vmap", "mlx.core.where", "mlx.core.zeros", "mlx.core.zeros_like", "mlx.nn.quantize", "mlx.nn.value_and_grad", "mlx.optimizers.clip_grad_norm", "mlx.utils.tree_flatten", "mlx.utils.tree_map", "mlx.utils.tree_map_with_path", "mlx.utils.tree_reduce", "mlx.utils.tree_unflatten", "mlx.core.Stream", "Array", "Data Types", "Devices and Streams", "Distributed Communication", "Fast", "FFT", "Linear Algebra", "Metal", "Neural Networks", "Operations", "Optimizers", "Random", "Transforms", "Tree Utils", "Compilation", "Distributed Communication", "Function Transforms", "Indexing Arrays", "Lazy Evaluation", "Conversion to NumPy and Other Frameworks", "Quick Start Guide", "Saving and Loading Arrays", "Unified Memory", "Using Streams"], "terms": {"i": [0, 8, 10, 20, 29, 69, 74, 84, 90, 91, 92, 93, 96, 97, 98, 99, 100, 105, 106, 109, 110, 112, 114, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 156, 161, 162, 166, 167, 168, 169, 170, 171, 172, 174, 179, 183, 184, 188, 194, 197, 211, 212, 215, 216, 223, 224, 233, 237, 238, 239, 244, 248, 250, 255, 256, 261, 262, 263, 266, 269, 270, 274, 275, 276, 277, 278, 279, 282, 284, 285, 286, 287, 288, 292, 294, 299, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "numpi": [0, 5, 8, 10, 78, 79, 80, 82, 113, 114, 118, 151, 152, 156, 163, 164, 165, 179, 184, 186, 201, 203, 207, 213, 231, 234, 258, 309, 311, 312], "like": [0, 161, 209, 281, 305, 306, 307, 309, 310, 311, 313], "arrai": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 299, 305, 306, 307, 309, 310, 311, 313], "framework": 0, "design": [0, 302, 313], "effici": [0, 148, 309, 311], "flexibl": 0, "machin": [0, 306], "learn": [0, 301], "appl": [0, 313], "silicon": [0, 313], "brought": 0, "you": [0, 128, 299, 302, 305, 306, 307, 308, 310, 312, 313], "research": 0, "The": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 39, 43, 53, 54, 60, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "close": [0, 8, 156], "follow": [0, 10, 93, 104, 126, 148, 169, 211, 215, 287, 299, 302, 305, 306, 307, 313], "few": [0, 306, 309, 311], "except": [0, 125, 138, 139, 141, 142, 143, 308, 310], "also": [0, 3, 5, 78, 79, 80, 107, 113, 114, 118, 134, 137, 140, 143, 151, 152, 163, 164, 165, 179, 186, 201, 203, 207, 213, 215, 231, 234, 258, 282, 283, 294, 299, 301, 305, 306, 307, 308, 309, 310, 311, 314], "ha": [0, 69, 85, 106, 138, 139, 141, 142, 143, 150, 166, 167, 168, 171, 172, 188, 192, 219, 301, 305, 308, 309, 311, 313], "fulli": [0, 305, 306, 310, 313], "featur": [0, 89, 90, 91, 92, 130, 305, 309], "which": [0, 10, 29, 74, 85, 92, 106, 121, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 174, 188, 198, 215, 219, 220, 232, 233, 237, 238, 239, 240, 241, 253, 254, 262, 269, 274, 277, 278, 282, 302, 305, 306, 307, 308, 309, 313, 314], "main": [0, 106, 125, 269, 286, 287, 299, 306], "differ": [0, 161, 258, 276, 307], "between": [0, 84, 144, 306, 309, 310, 313], "ar": [0, 8, 10, 73, 81, 82, 84, 85, 92, 93, 100, 106, 121, 125, 128, 133, 134, 136, 137, 139, 140, 142, 143, 144, 149, 150, 156, 157, 158, 159, 160, 161, 162, 169, 170, 174, 184, 197, 210, 211, 212, 215, 216, 218, 219, 220, 225, 228, 229, 240, 241, 253, 254, 262, 274, 277, 278, 282, 285, 286, 292, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "compos": [0, 299, 305, 307, 311], "function": [0, 8, 74, 85, 100, 114, 119, 120, 128, 150, 156, 162, 166, 167, 168, 169, 170, 171, 172, 184, 244, 274, 277, 278, 283, 284, 286, 287, 288, 299, 301, 302, 304, 306, 308, 309, 310, 312], "transform": [0, 100, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 283, 299, 308], "automat": [0, 174, 306, 311, 312, 313], "differenti": 0, "vector": [0, 155, 162, 169, 262, 277, 278, 311], "comput": [0, 96, 97, 98, 99, 100, 104, 116, 124, 126, 130, 150, 162, 166, 167, 168, 169, 172, 179, 187, 210, 215, 231, 248, 255, 256, 266, 274, 275, 277, 283, 299, 301, 305, 306, 307, 311, 313], "graph": [0, 307], "optim": [0, 305, 306, 307, 309], "lazi": [0, 311], "onli": [0, 73, 81, 90, 91, 92, 169, 215, 223, 276, 299, 305, 306, 307, 312, 313], "materi": 0, "when": [0, 85, 92, 100, 128, 166, 167, 168, 169, 171, 172, 174, 301, 302, 305, 306, 313], "need": [0, 73, 215, 299, 302, 306, 307, 309, 310, 311, 313], "multi": [0, 131, 308, 310], "devic": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 290, 313, 314], "oper": [0, 1, 29, 75, 76, 77, 92, 131, 148, 149, 213, 248, 256, 263, 290, 299, 305, 306, 307, 308, 309, 310, 311, 313, 314], "can": [0, 5, 10, 57, 70, 74, 78, 79, 80, 85, 106, 107, 108, 113, 114, 118, 121, 151, 152, 163, 164, 165, 169, 179, 186, 201, 203, 207, 213, 218, 219, 225, 228, 229, 231, 234, 238, 258, 269, 274, 288, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "run": [0, 1, 128, 210, 290, 305, 306, 309, 313, 314], "ani": [0, 10, 85, 285, 286, 287, 288, 289, 299, 304, 305, 307, 309, 311, 312, 313], "support": [0, 8, 81, 91, 131, 144, 153, 156, 166, 167, 168, 170, 171, 172, 174, 184, 215, 223, 306, 307, 308, 310, 312], "cpu": [0, 170, 305, 313], "gpu": [0, 190, 305, 308, 313], "inspir": 0, "pytorch": [0, 307], "jax": [0, 302], "arrayfir": 0, "A": [0, 1, 60, 73, 85, 127, 128, 129, 131, 150, 161, 162, 167, 169, 170, 171, 174, 183, 184, 185, 190, 200, 215, 218, 219, 220, 222, 223, 224, 225, 228, 229, 250, 254, 257, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 301, 305, 306, 307, 309, 310], "notabl": 0, "from": [0, 74, 103, 104, 106, 109, 110, 126, 128, 139, 140, 142, 143, 147, 148, 153, 169, 174, 184, 188, 193, 196, 209, 215, 217, 218, 219, 220, 221, 222, 225, 228, 240, 253, 256, 258, 262, 263, 268, 269, 279, 281, 285, 286, 287, 288, 289, 299, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313], "unifi": 0, "memori": [0, 74, 189, 191, 192, 193, 195, 196, 197, 305, 309, 310], "model": [0, 240, 282, 283, 286, 287, 299, 301, 305, 306, 309], "live": [0, 313], "share": [0, 104, 126, 149, 215, 216, 276, 306], "perform": [0, 6, 81, 92, 96, 97, 98, 99, 115, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 153, 184, 216, 235, 248, 262, 299, 301, 305, 306, 308, 309, 313], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 60, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 288, 299, 305, 308], "without": [0, 256, 304, 305, 306, 309, 310, 313], "data": [0, 2, 10, 125, 141, 142, 147, 154, 173, 204, 208, 228, 269, 271, 276, 280, 305, 306, 308, 310], "copi": [0, 212, 249, 310], "current": [0, 74, 81, 91, 190, 192, 215, 288, 299, 306, 309], "build": [0, 305], "quick": 0, "start": [0, 10, 130, 173, 198, 250, 288, 305, 308, 313], "guid": 0, "evalu": [0, 121, 162, 277, 299, 301, 305, 311], "index": [0, 1, 20, 30, 123, 125, 150, 188, 212, 262, 263, 274, 290], "save": [0, 174, 198, 215, 238, 239, 240, 241, 309], "load": [0, 294, 306], "compil": [0, 107, 117, 128, 306, 307, 309], "convers": 0, "other": [0, 161, 169, 299, 305, 306, 308, 309, 311], "distribut": [0, 218, 219, 220, 222, 223, 224, 228, 229], "commun": [0, 108, 111, 112], "us": [0, 10, 30, 74, 100, 104, 107, 109, 110, 114, 126, 128, 130, 144, 149, 163, 166, 167, 168, 169, 170, 171, 172, 184, 191, 192, 193, 196, 215, 216, 232, 233, 234, 261, 285, 288, 292, 294, 299, 301, 302, 304, 305, 306, 307, 308, 311, 313], "stream": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 306, 313], "linear": [0, 282, 286, 299, 305], "regress": 0, "layer": [0, 127, 282, 299], "perceptron": 0, "llm": 0, "infer": [0, 147, 174, 269, 306], "random": [0, 128, 305, 307, 313, 314], "fast": [0, 306, 313], "fft": 0, "algebra": 0, "metal": [0, 128], "neural": 0, "network": [0, 306], "tree": [0, 85, 121, 150, 274, 278, 285, 286, 287, 288, 289, 307], "util": [0, 240, 299, 301, 306], "custom": [0, 100, 128], "extens": [0, 174, 198, 312], "debugg": 0, "kernel": [0, 89, 90, 91, 92, 128, 305, 308], "class": [1, 2, 3, 22, 100, 108, 128, 290], "__init__": [1, 2, 3, 22, 100, 108, 128, 290, 299], "self": [1, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 100, 128, 290, 299], "devicetyp": 1, "int": [1, 7, 9, 10, 18, 19, 20, 21, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 41, 48, 49, 50, 51, 52, 55, 58, 60, 63, 66, 67, 68, 69, 71, 74, 81, 82, 86, 89, 90, 91, 92, 96, 97, 98, 99, 104, 105, 106, 116, 123, 125, 126, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 154, 161, 169, 173, 183, 185, 187, 190, 191, 192, 193, 196, 197, 200, 202, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 248, 249, 250, 253, 254, 255, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 282, 290, 299], "0": [1, 6, 10, 30, 37, 38, 41, 58, 63, 71, 74, 86, 89, 90, 91, 92, 105, 106, 125, 131, 144, 148, 150, 168, 169, 170, 172, 189, 196, 204, 211, 218, 222, 224, 229, 232, 235, 250, 254, 255, 269, 271, 272, 273, 274, 275, 278, 284, 285, 287, 288, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312], "none": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 308], "method": [1, 2, 22, 100, 108, 128, 282, 290, 299], "attribut": [1, 2, 3, 22, 290], "an": [2, 7, 9, 22, 75, 76, 77, 82, 89, 90, 91, 92, 108, 121, 125, 127, 131, 144, 147, 154, 166, 169, 174, 197, 202, 208, 209, 211, 214, 215, 216, 232, 233, 235, 250, 253, 260, 262, 263, 266, 267, 271, 278, 280, 281, 285, 286, 287, 288, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "object": [2, 22, 42, 69, 85, 161, 240, 278, 285, 286, 287, 288, 292, 304], "hold": [2, 3, 169, 305], "see": [2, 3, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 169, 196, 238, 239, 282, 292, 299, 305, 306, 307, 308, 311, 313], "list": [2, 7, 9, 22, 63, 69, 74, 75, 76, 77, 82, 85, 86, 92, 116, 121, 133, 134, 136, 137, 139, 140, 142, 143, 147, 150, 162, 169, 183, 185, 187, 188, 200, 208, 211, 214, 218, 219, 220, 222, 223, 224, 225, 228, 229, 238, 248, 250, 254, 255, 259, 266, 267, 270, 274, 275, 277, 280, 285, 288, 289, 299, 301, 304, 305, 306, 307, 309], "more": [2, 69, 106, 148, 166, 167, 168, 171, 172, 184, 196, 197, 238, 239, 292, 299, 302, 305, 306, 307, 308, 311, 313], "detail": [2, 196, 299, 308, 311], "avail": [2, 112, 194, 294, 313], "arg": [2, 108, 121, 240, 241], "kwarg": [2, 108, 240, 241, 314], "valu": [3, 4, 8, 10, 18, 19, 42, 69, 73, 84, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 156, 169, 171, 173, 190, 204, 211, 218, 219, 220, 222, 223, 224, 225, 228, 229, 238, 262, 263, 274, 278, 283, 285, 286, 287, 288, 292, 307], "categori": [3, 161, 292], "dtype": [3, 10, 22, 29, 30, 69, 72, 125, 128, 144, 147, 154, 161, 169, 170, 173, 208, 220, 222, 223, 224, 225, 228, 229, 269, 271, 276, 280, 292, 305, 306, 307, 308, 310, 311, 312], "gener": [3, 10, 92, 125, 128, 139, 140, 173, 188, 218, 223, 224, 225, 228, 229, 302, 305, 308, 309, 314], "bool_": [3, 292], "number": [3, 10, 53, 62, 85, 90, 91, 92, 104, 125, 126, 149, 150, 154, 162, 173, 204, 211, 215, 216, 219, 222, 224, 227, 229, 232, 235, 266, 267, 271, 274, 277, 278, 282, 299, 302, 305, 307, 314], "integ": [3, 146, 148, 149, 161, 169, 190, 211, 215, 216, 218, 225, 250, 266, 278, 292, 308], "unsignedinteg": 3, "uint8": [3, 292], "uint16": [3, 292], "uint32": [3, 18, 19, 20, 21, 219, 292], "uint64": [3, 292], "signedinteg": [3, 161], "int8": [3, 292], "int32": [3, 10, 30, 144, 161, 169, 225, 292, 308, 311], "int64": [3, 292], "inexact": [3, 161], "float": [3, 6, 8, 10, 69, 127, 129, 130, 131, 146, 147, 153, 156, 161, 169, 204, 216, 218, 222, 224, 284, 292], "float16": [3, 128, 153, 174, 292, 309, 310], "bfloat16": [3, 153, 292, 310], "float32": [3, 10, 125, 128, 131, 153, 154, 161, 169, 170, 173, 208, 220, 222, 223, 224, 228, 229, 271, 280, 292, 305, 306, 307, 308, 309, 310, 311, 312], "complexflo": 3, "complex64": [3, 292], "issubdtyp": [3, 292], "element": [4, 5, 11, 12, 13, 14, 15, 16, 17, 20, 62, 74, 78, 79, 80, 83, 94, 95, 96, 97, 98, 99, 104, 113, 114, 118, 119, 120, 122, 124, 125, 126, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 201, 203, 205, 207, 212, 213, 215, 216, 230, 231, 232, 234, 236, 244, 245, 246, 247, 251, 252, 258, 262, 264, 265, 268, 274, 276, 279, 305, 307], "wise": [4, 5, 11, 12, 13, 14, 15, 16, 17, 78, 79, 80, 83, 94, 95, 113, 114, 118, 119, 120, 122, 124, 145, 146, 151, 152, 156, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 186, 201, 203, 205, 207, 213, 230, 231, 234, 236, 244, 245, 246, 247, 251, 252, 258, 264, 265, 305], "absolut": [4, 8, 156], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 301, 305, 306, 307, 309], "input": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 109, 110, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 305, 307, 308, 311, 312], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 42, 60, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 299, 304, 305, 306, 307, 308, 309, 310, 312, 313], "scalar": [5, 6, 8, 22, 42, 69, 73, 78, 79, 80, 81, 82, 84, 113, 114, 118, 146, 147, 150, 151, 152, 153, 156, 163, 164, 165, 169, 173, 179, 180, 181, 182, 184, 186, 201, 203, 204, 207, 211, 213, 218, 225, 228, 229, 231, 234, 238, 258, 274, 276, 279, 283, 307, 309, 311], "b": [5, 6, 8, 16, 73, 78, 79, 80, 81, 113, 114, 118, 128, 146, 148, 151, 152, 155, 156, 163, 164, 165, 169, 179, 180, 182, 184, 186, 201, 203, 207, 210, 213, 215, 222, 231, 234, 258, 266, 274, 287, 288, 307, 308, 309, 310, 311, 312, 313], "addit": [5, 6, 127, 129, 131, 174, 307], "two": [5, 6, 8, 16, 73, 76, 78, 79, 80, 81, 106, 113, 118, 133, 136, 142, 148, 149, 151, 152, 156, 164, 165, 166, 167, 168, 170, 171, 172, 179, 184, 186, 201, 203, 207, 210, 260, 288, 305, 306, 307, 308, 313], "style": [5, 8, 78, 79, 80, 113, 114, 118, 151, 152, 156, 163, 164, 165, 179, 184, 186, 201, 203, 207, 213, 231, 234, 258], "broadcast": [5, 8, 78, 79, 80, 82, 84, 113, 114, 118, 147, 151, 152, 156, 163, 164, 165, 179, 184, 186, 201, 203, 207, 213, 218, 219, 223, 228, 229, 231, 234, 258, 263, 279], "semant": [5, 78, 79, 80, 82, 113, 114, 118, 151, 152, 163, 164, 165, 179, 184, 186, 201, 203, 207, 213, 231, 234, 258, 313], "either": [5, 57, 69, 70, 78, 79, 80, 84, 113, 114, 118, 146, 151, 152, 163, 164, 165, 169, 179, 184, 186, 201, 203, 207, 213, 231, 234, 258, 274, 310], "both": [5, 78, 79, 80, 113, 114, 118, 151, 152, 161, 163, 164, 165, 169, 179, 186, 201, 203, 207, 213, 219, 231, 234, 258, 282, 301, 305, 306, 307, 311, 313], "sum": [5, 99, 110, 155, 169, 183, 248, 266, 269, 299, 306, 308, 310], "c": [6, 169, 310, 311, 313], "alpha": [6, 215], "1": [6, 10, 20, 21, 30, 38, 41, 89, 90, 91, 92, 105, 106, 124, 128, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 153, 155, 161, 167, 169, 170, 184, 188, 197, 210, 212, 215, 219, 222, 223, 224, 229, 244, 249, 262, 268, 269, 274, 284, 287, 288, 292, 299, 301, 305, 306, 307, 308, 310, 311, 312, 313], "beta": [6, 104, 126, 215, 301], "matrix": [6, 37, 81, 104, 105, 125, 126, 148, 149, 153, 154, 166, 167, 168, 169, 170, 171, 172, 184, 188, 215, 216, 223], "multipl": [6, 81, 127, 129, 148, 149, 184, 203, 215, 216, 305, 309, 312], "option": [6, 7, 9, 10, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 81, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 104, 105, 106, 111, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 159, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 185, 187, 188, 197, 200, 204, 208, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 232, 233, 248, 249, 250, 253, 254, 255, 259, 261, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 282, 285, 286, 287, 288, 302, 305, 312, 314], "scale": [6, 104, 126, 127, 129, 130, 131, 149, 153, 215, 216, 222, 224, 284], "possibli": [6, 81, 148, 184, 284], "batch": [6, 81, 148, 149, 184, 223, 309], "add": [6, 30, 123, 179, 211, 215, 307, 313], "result": [6, 10, 30, 69, 74, 85, 127, 129, 149, 169, 184, 216, 223, 232, 254, 286, 287, 288, 305, 307, 310], "factor": [6, 153, 166, 167, 170], "product": [6, 74, 98, 155, 162, 184, 210, 214, 266, 277, 311], "default": [6, 7, 8, 9, 10, 18, 19, 20, 21, 73, 74, 81, 85, 86, 89, 90, 91, 92, 100, 101, 102, 104, 105, 106, 109, 110, 111, 125, 126, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 185, 187, 188, 196, 197, 200, 204, 208, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 242, 243, 249, 250, 253, 254, 255, 257, 259, 261, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 282, 292, 302, 304, 305, 307, 310, 312, 314], "axi": [7, 9, 18, 19, 20, 21, 25, 26, 27, 28, 33, 34, 35, 36, 48, 49, 50, 51, 55, 63, 66, 67, 71, 86, 96, 97, 98, 99, 106, 109, 123, 127, 129, 132, 135, 138, 139, 140, 141, 142, 143, 144, 153, 169, 183, 185, 187, 200, 202, 211, 212, 214, 219, 232, 248, 249, 250, 253, 254, 255, 259, 260, 262, 263, 267, 268, 269, 270, 275, 276, 278, 308], "sequenc": [7, 9, 25, 26, 48, 49, 50, 51, 55, 63, 66, 67, 71, 74, 82, 92, 123, 133, 134, 136, 137, 139, 140, 142, 143, 147, 183, 185, 187, 200, 208, 214, 218, 219, 220, 222, 223, 224, 225, 228, 229, 233, 248, 250, 253, 255, 259, 266, 267, 270, 275, 280, 302, 313], "keepdim": [7, 9, 18, 19, 25, 26, 27, 28, 48, 49, 50, 51, 55, 67, 71, 169, 183, 185, 187, 200, 214, 248, 255, 259, 275], "bool": [7, 8, 9, 18, 19, 25, 26, 27, 28, 33, 34, 35, 36, 48, 49, 50, 51, 55, 67, 69, 71, 73, 85, 92, 96, 97, 98, 99, 111, 112, 128, 130, 149, 156, 161, 166, 167, 169, 172, 174, 183, 185, 187, 188, 194, 197, 200, 214, 216, 255, 259, 275], "fals": [7, 8, 9, 18, 19, 25, 26, 27, 28, 33, 34, 35, 36, 48, 49, 50, 51, 55, 67, 71, 73, 85, 92, 96, 97, 98, 99, 111, 156, 161, 166, 167, 169, 172, 174, 183, 185, 187, 188, 197, 200, 214, 255, 259, 275, 279, 282, 285, 286, 287, 288, 292, 310], "reduct": [7, 9, 110, 183, 185, 200, 214, 288, 306], "over": [7, 9, 18, 19, 20, 21, 89, 90, 91, 92, 96, 97, 98, 99, 134, 137, 140, 143, 155, 169, 171, 173, 183, 185, 187, 200, 212, 214, 236, 248, 249, 255, 259, 266, 268, 275, 306, 307], "given": [7, 9, 20, 30, 74, 82, 84, 86, 96, 97, 98, 99, 104, 106, 116, 121, 123, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 147, 148, 169, 183, 185, 187, 196, 200, 204, 206, 214, 223, 225, 235, 243, 248, 250, 255, 259, 261, 267, 268, 269, 271, 272, 273, 275, 290], "ax": [7, 9, 18, 19, 70, 100, 123, 133, 134, 136, 137, 139, 140, 142, 143, 144, 155, 169, 183, 185, 187, 200, 211, 214, 248, 253, 255, 259, 260, 266, 270, 275, 307], "reduc": [7, 9, 18, 19, 110, 183, 185, 187, 200, 214, 255, 259, 275, 288], "If": [7, 8, 9, 10, 18, 19, 20, 21, 69, 73, 74, 84, 86, 93, 96, 97, 98, 99, 105, 106, 109, 110, 111, 121, 127, 130, 141, 142, 143, 146, 147, 150, 156, 166, 167, 169, 174, 183, 184, 185, 187, 188, 196, 197, 200, 204, 208, 211, 212, 214, 219, 223, 232, 248, 249, 250, 255, 259, 261, 262, 263, 266, 268, 269, 274, 275, 278, 280, 282, 286, 288, 305, 306, 307, 309, 312, 313, 314], "unspecifi": [7, 9, 10, 18, 19, 20, 21, 86, 96, 97, 98, 99, 147, 183, 185, 187, 200, 208, 212, 214, 232, 248, 249, 255, 259, 262, 268, 269, 275, 280, 314], "thi": [7, 8, 9, 10, 18, 19, 20, 21, 74, 100, 117, 128, 148, 149, 153, 156, 162, 166, 167, 168, 169, 170, 171, 172, 179, 183, 184, 185, 187, 189, 191, 200, 212, 214, 219, 243, 248, 249, 250, 255, 259, 262, 268, 275, 284, 287, 288, 299, 304, 305, 306, 307, 309, 310, 312], "entir": [7, 9, 18, 19, 183, 185, 187, 200, 214, 255, 259, 275], "keep": [7, 9, 18, 19, 183, 185, 187, 200, 214, 255, 259, 275, 299, 307, 309], "singleton": [7, 9, 18, 19, 111, 183, 184, 185, 187, 200, 214, 255, 259, 275], "dimens": [7, 9, 18, 19, 54, 60, 69, 75, 76, 77, 85, 90, 91, 92, 106, 123, 130, 139, 140, 142, 143, 144, 148, 149, 155, 166, 167, 168, 169, 170, 171, 172, 183, 184, 185, 187, 200, 214, 215, 219, 227, 255, 259, 263, 266, 270, 275, 305, 307], "output": [7, 8, 9, 10, 20, 74, 81, 82, 85, 87, 88, 96, 97, 98, 99, 100, 115, 125, 127, 128, 129, 130, 131, 138, 141, 142, 143, 147, 148, 150, 153, 154, 156, 169, 173, 183, 185, 187, 188, 200, 204, 208, 209, 212, 214, 218, 219, 220, 222, 223, 224, 225, 228, 229, 240, 241, 248, 253, 255, 259, 263, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 305, 306, 307, 308, 309, 310, 311, 312, 313], "correspond": [7, 9, 69, 84, 104, 106, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 183, 185, 200, 214, 259, 266, 278, 286, 307], "rtol": [8, 156], "1e": [8, 156, 301], "05": [8, 156], "atol": [8, 156], "08": [8, 156], "equal_nan": [8, 73, 156], "approxim": 8, "comparison": [8, 118, 151, 152, 164, 165, 207], "infinit": [8, 156], "consid": [8, 73, 156, 285, 286, 287, 304], "equal": [8, 20, 73, 125, 152, 156, 165, 207, 212, 225, 250], "thei": [8, 93, 149, 156, 304, 305, 306, 309, 311, 312, 313], "have": [8, 73, 75, 76, 77, 81, 109, 139, 140, 142, 143, 149, 156, 184, 198, 219, 276, 285, 304, 305, 306, 308, 309, 313], "same": [8, 30, 73, 82, 85, 90, 91, 92, 93, 109, 127, 129, 138, 141, 142, 143, 149, 150, 156, 162, 211, 219, 235, 276, 277, 279, 287, 299, 302, 305, 306, 308, 313], "sign": [8, 156, 292], "nan": [8, 73, 156, 158, 204], "unless": [8, 156, 169], "true": [8, 33, 34, 35, 36, 73, 85, 96, 97, 98, 99, 128, 130, 149, 156, 161, 166, 167, 169, 174, 188, 197, 216, 248, 279, 282, 285, 286, 287, 288, 292, 299], "all": [8, 20, 30, 75, 76, 77, 85, 90, 91, 92, 100, 109, 110, 111, 125, 134, 137, 140, 143, 148, 149, 171, 184, 211, 212, 253, 282, 299, 302, 305, 308, 309, 311, 314], "ab": [8, 156, 169, 274, 305], "note": [8, 74, 81, 85, 91, 100, 131, 139, 140, 149, 156, 169, 191, 215, 219, 276, 282, 299, 301, 310, 312], "unlik": [8, 156], "array_equ": [8, 156], "rel": [8, 156, 305], "toler": [8, 156], "boolean": [8, 73, 156, 157, 158, 159, 160, 161, 180, 181, 182, 292, 308], "indic": [8, 18, 19, 20, 21, 30, 148, 149, 150, 156, 157, 158, 159, 160, 161, 171, 250, 262, 263, 274, 308], "stop": [10, 173, 199, 256, 307, 308], "step": [10, 299, 305, 306], "rang": [10, 144, 148, 173, 301, 302, 305, 307, 309, 313], "half": [10, 225, 229, 309], "open": [10, 225, 229], "interv": [10, 173, 225, 229], "increment": 10, "specifi": [10, 29, 90, 91, 92, 106, 139, 140, 147, 150, 169, 173, 202, 208, 219, 232, 260, 262, 263, 266, 269, 270, 274, 278, 280, 306, 307, 313], "otherwis": [10, 92, 111, 197, 282, 285, 286, 287, 288, 309, 310], "convent": [10, 93, 115, 116], "actual": [10, 309], "lead": [10, 74, 305], "unexpect": 10, "exampl": [10, 30, 100, 144, 161, 169, 170, 257, 262, 284, 287, 288, 299, 301, 302, 307, 308, 309, 310, 311, 312], "fraction": 10, "integr": [10, 262, 309], "invers": [11, 12, 13, 14, 15, 16, 17, 120, 135, 136, 137, 138, 139, 140, 167, 168, 172], "cosin": [11, 12, 94, 95, 307], "hyperbol": [12, 14, 17, 95, 247, 265], "sine": [13, 14, 246, 247, 307], "tangent": [15, 16, 17, 100, 162, 264, 265], "ratio": 16, "maximum": [18, 30, 84, 96, 193, 197, 284, 299, 309], "along": [18, 19, 85, 86, 96, 97, 98, 99, 109, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 153, 169, 232, 248, 250, 254, 262, 263, 266, 267, 268, 269, 276, 299], "minimum": [19, 30, 84, 97], "kth": [20, 212], "partit": 20, "order": [20, 74, 92, 116, 169, 212, 215, 268, 299, 305, 307], "within": [20, 156], "undefin": [20, 100, 166, 167, 212, 223, 308], "posit": [20, 106, 130, 144, 150, 160, 166, 167, 202, 204, 212, 223, 269, 274, 286, 299], "give": [20, 305], "sort": [20, 21, 212, 268], "befor": [20, 128, 212, 306, 308, 309], "less": [20, 165, 212], "after": [20, 144, 146, 149, 189, 212, 215, 305, 313], "greater": [20, 124, 152, 212, 284], "flatten": [20, 21, 96, 97, 98, 99, 169, 210, 212, 232, 249, 262, 263, 268, 285], "contain": [20, 21, 60, 85, 106, 116, 138, 139, 140, 148, 149, 169, 180, 181, 182, 215, 250, 279, 284, 299, 305, 306, 307], "last": [21, 69, 127, 129, 134, 137, 139, 140, 142, 143, 144, 148, 149, 155, 166, 167, 168, 170, 171, 172, 184, 193, 219, 249, 266, 276, 310], "n": [22, 81, 89, 90, 91, 92, 125, 132, 134, 135, 137, 138, 141, 143, 153, 154, 223, 255, 271, 275, 306], "dimension": [22, 127, 129, 132, 133, 134, 135, 136, 137, 141, 142, 143, 308, 310], "val": [22, 147], "tupl": [22, 57, 60, 70, 86, 90, 91, 92, 114, 116, 121, 123, 162, 169, 170, 171, 211, 215, 233, 253, 274, 277, 285, 286, 287, 288, 289, 304, 307], "ndarrai": [22, 308, 309, 311], "properti": [23, 30, 39, 43, 53, 54, 60, 62, 307], "equival": [23, 57, 70, 114, 146, 149, 153, 262], "call": [23, 128, 146, 189, 193, 299, 301, 305, 306, 307, 309], "transpos": [23, 149, 216], "argument": [23, 57, 70, 85, 121, 150, 274, 286, 287, 288, 299, 302, 306, 307, 312, 313, 314], "union": [24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 81, 115, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 159, 160, 161, 190, 227, 228, 238, 257, 269], "cast": [29, 141, 142, 143, 174, 310], "appli": [30, 130, 131, 148, 171, 286, 287, 288, 299, 305, 306], "updat": [30, 85, 282, 286, 288, 301, 305, 306, 309], "regular": [30, 305, 308], "place": [30, 235, 282, 306, 309, 310], "map": [30, 174, 286], "assign": 30, "For": [30, 131, 148, 161, 169, 215, 289, 299, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313], "instanc": [30, 100, 215, 289, 299, 310], "x": [30, 81, 100, 109, 110, 119, 124, 127, 128, 129, 149, 153, 154, 169, 216, 220, 235, 240, 244, 272, 273, 279, 286, 288, 299, 301, 305, 306, 307, 308, 309, 310, 311, 313], "idx": [30, 308], "y": [30, 100, 153, 279, 299, 301, 305, 306, 307, 309, 310], "As": [30, 262, 299, 305], "ignor": [30, 84, 85, 121], "one": [30, 69, 75, 84, 90, 91, 92, 123, 125, 127, 129, 130, 169, 177, 184, 216, 219, 253, 258, 292, 306, 313], "correctli": 30, "syntax": [30, 308], "In": [30, 184, 215, 286, 299, 304, 305, 306, 307, 309, 312, 313], "subtract": 30, "multipli": [30, 149, 215, 216], "divid": [30, 146, 215, 231, 306], "mx": [30, 87, 88, 100, 111, 128, 144, 161, 169, 170, 174, 240, 274, 284, 299, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "2": [30, 90, 105, 106, 119, 133, 136, 138, 139, 140, 141, 142, 143, 144, 153, 161, 166, 167, 168, 169, 170, 171, 172, 178, 184, 215, 223, 227, 266, 269, 271, 272, 273, 284, 288, 292, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313], "revers": [33, 34, 35, 36, 74, 96, 97, 98, 99, 270], "inclus": [33, 34, 35, 36, 96, 97, 98, 99, 144], "k": [37, 81, 105, 125, 131, 148, 153, 268, 271, 272, 273], "extract": [37, 105, 106, 299, 306], "diagon": [37, 105, 125, 269, 271, 272, 273], "construct": [37, 105, 147, 208, 267, 280], "offset": [38, 74, 106, 127, 130, 269], "axis1": [38, 68, 106, 260, 269], "axis2": [38, 68, 106, 260, 269], "": [39, 43, 54, 85, 102, 104, 126, 133, 134, 136, 137, 139, 140, 142, 143, 150, 167, 169, 171, 174, 187, 210, 215, 219, 235, 238, 239, 255, 257, 274, 275, 276, 278, 283, 299, 301, 302, 305, 307, 309, 310, 311, 312, 313], "start_axi": [41, 144], "end_axi": [41, 144], "access": [42, 299, 306, 309, 313], "standard": [42, 69, 184, 220, 224, 255, 306, 311], "python": [42, 60, 69, 121, 285, 286, 287, 288, 289, 304, 306, 307, 310], "size": [43, 60, 81, 90, 91, 104, 123, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 149, 153, 154, 161, 169, 192, 197, 215, 216, 219, 233, 250, 253, 276, 282, 299, 306, 309, 310], "datatyp": 43, "byte": [43, 53, 191, 192, 193, 196, 197, 292], "sourc": [52, 128, 202, 270, 306], "destin": [52, 202], "shape": [57, 73, 74, 81, 82, 85, 89, 90, 91, 92, 106, 109, 128, 131, 132, 135, 138, 141, 142, 143, 147, 148, 153, 162, 168, 172, 184, 208, 209, 218, 219, 220, 222, 223, 224, 225, 228, 229, 233, 263, 276, 277, 279, 280, 281, 299, 301, 305, 307, 308, 311, 313], "pass": [57, 70, 210, 211, 274, 283, 285, 286, 287, 299, 305, 306, 309], "separ": [57, 70], "full": [57, 70, 93, 248, 305, 306, 309], "document": [57, 70, 238, 239, 292, 305, 307, 308], "decim": [58, 235], "each": [60, 104, 121, 126, 130, 149, 161, 166, 167, 168, 171, 172, 184, 188, 211, 215, 216, 219, 232, 240, 241, 250, 267, 270, 276, 278, 279, 302, 305, 306, 309], "indices_or_sect": [63, 250], "convert": [69, 75, 76, 77, 103, 144, 217, 309, 310, 311], "than": [69, 93, 106, 114, 130, 148, 151, 152, 164, 165, 166, 167, 168, 171, 172, 184, 196, 284, 286, 305, 307, 313], "nest": [69, 85, 288, 299, 304, 307], "depend": [69, 169, 306, 308, 312, 313], "ddof": [71, 255, 275], "check": [73, 112, 161, 194, 307, 308], "compar": [73, 305], "stride": [74, 89, 90, 91, 92, 308], "creat": [74, 111, 125, 154, 257, 299, 301, 305, 308, 310], "view": [74, 310], "alwai": [74, 191, 285, 307], "provid": [74, 104, 126, 150, 266, 274, 286, 288, 294, 299, 306, 312, 314], "wa": [74, 306, 309], "row": [74, 125, 128, 154, 215, 271], "contigu": [74, 128], "regardless": [74, 131], "storag": 74, "should": [74, 106, 109, 127, 129, 131, 162, 189, 198, 215, 263, 269, 274, 277, 282, 285, 299, 304, 305, 306, 307, 309, 310, 314], "caution": 74, "chang": [74, 85, 243, 276, 305, 310], "directli": 74, "point": [74, 146, 216, 292], "invalid": 74, "locat": [74, 306, 313], "crash": [74, 305], "exclus": [74, 80], "cumul": [74, 96, 97, 98, 99], "skip": 74, "mani": [74, 250, 305, 306, 309], "begin": [74, 167, 193, 215], "ari": [75, 76, 77], "least": [75, 76, 77, 84, 166, 167, 168, 170, 171, 172, 215], "execut": [75, 76, 77, 193, 310, 313], "three": 77, "bitwis": [78, 79, 80, 163, 234], "take": [78, 79, 80, 85, 148, 150, 162, 186, 201, 209, 216, 263, 274, 277, 278, 281, 287, 288, 302, 306, 307, 308, 312, 313, 314], "xor": 80, "block_siz": 81, "64": [81, 104, 126, 149, 215, 216, 282, 292], "mask_out": 81, "mask_lh": 81, "mask_rh": 81, "block": 81, "mask": [81, 131, 308], "out": [81, 128, 305, 306, 307, 308], "assum": [81, 170, 286, 299], "m": [81, 125, 148, 153, 169, 271, 305], "lhs_mask": 81, "must": [81, 84, 130, 147, 149, 169, 218, 219, 223, 225, 228, 229, 279, 310], "lceil": 81, "rceil": 81, "rhs_mask": 81, "out_mask": 81, "32": [81, 215, 216, 292, 305], "new": [82, 106, 202, 206, 233, 254, 270, 276, 286, 287, 301, 305, 308, 309, 310], "a_min": 84, "a_max": 84, "edg": [84, 211, 305], "At": 84, "cannot": [84, 308, 310], "limit": [84, 196, 197, 308], "anoth": [84, 161, 184, 258, 279, 292, 299, 305, 307, 308, 313], "fun": [85, 150, 162, 274, 277, 278, 305, 308, 309, 313], "callabl": [85, 100, 128, 150, 162, 274, 277, 278, 282, 283, 285, 286, 287, 288], "shapeless": 85, "produc": 85, "variabl": [85, 107, 117, 150, 162, 274, 277, 278, 306], "dict": [85, 121, 174, 190, 238, 239, 240, 284, 301, 304, 307, 312], "These": [85, 263, 313], "captur": [85, 198, 199, 299, 305], "dure": [85, 310], "arbitrarili": [85, 299, 304, 307, 311], "dictionari": [85, 174, 190, 238, 239, 284, 285, 288, 299, 304, 312], "leaf": [85, 282, 285, 286, 287, 288], "node": [85, 121, 278, 287, 288], "enabl": [85, 117], "recompil": [85, 305], "Not": [85, 207, 305], "attempt": 85, "throw": [85, 111], "even": [85, 305, 309, 310], "set": [85, 100, 107, 109, 110, 111, 117, 127, 130, 190, 196, 197, 242, 243, 257, 301, 302, 307, 309], "elementwis": [87, 88], "complex": [87, 88, 139, 140, 141, 142, 143, 285, 292, 299, 305, 307], "conjug": 87, "alia": [87, 88], "conj": 88, "weight": [89, 90, 91, 92, 127, 129, 286, 299, 307, 309], "pad": [89, 90, 91, 92, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "dilat": [89, 90, 91, 92], "group": [89, 90, 91, 92, 104, 109, 110, 111, 126, 131, 149, 215, 216, 276, 282, 306], "1d": [89, 93, 238, 263], "convolut": [89, 90, 91, 92, 93], "sever": [89, 90, 91, 92, 240, 241, 305, 312], "channel": [89, 90, 91, 92], "h": [89, 90, 91, 169, 307, 309], "c_in": [89, 90, 91, 92], "c_out": [89, 90, 91, 92], "convolv": [89, 90, 91, 92], "2d": [90, 106, 215], "w": [90, 91, 104, 126, 149, 215, 216, 274, 287, 301, 307], "spatial": [90, 91, 92], "get": [90, 91, 92, 101, 102, 190, 191, 192, 193, 221, 299, 305, 307, 309, 313], "symmetr": [90, 91, 166, 167], "kernel_dil": 92, "input_dil": 92, "flip": [92, 93], "process": [92, 93, 108, 109, 110, 111, 286, 287, 304, 306], "cross": 92, "correl": 92, "v": [93, 131, 299, 310], "mode": [93, 211, 306], "str": [93, 115, 116, 128, 150, 169, 174, 188, 190, 198, 237, 238, 239, 240, 241, 274, 285, 289], "discret": [93, 132, 133, 134, 135, 136, 137, 141, 142, 143], "longer": [93, 307], "swap": [93, 197, 260], "conv": 93, "filter": 93, "signal": 93, "valid": [93, 144, 278, 285, 304], "th": [96, 97, 98, 99, 105, 125], "includ": [96, 97, 98, 99, 191, 192, 197, 301, 305, 307, 308, 311, 312, 314], "up": [100, 305], "gradient": [100, 150, 256, 274, 283, 284, 299, 301, 305, 306, 307, 308, 309, 310, 311], "vmap": [100, 307, 309, 311], "definit": [100, 166, 167, 223], "meant": 100, "decor": 100, "behav": 100, "ident": [100, 125, 256, 299], "wrap": [100, 299], "howev": [100, 299, 302, 305, 306, 309, 310], "e": [100, 119, 148, 149, 162, 244, 301, 305, 309, 314], "g": [100, 169, 215, 309, 314], "value_and_grad": [100, 299, 301, 305, 307, 310, 311], "defin": [100, 128, 149, 169, 216, 282, 285, 310], "via": [100, 306, 309, 310], "vjp": [100, 311], "jvp": [100, 311], "instead": [100, 299, 306, 307, 309], "fall": 100, "back": [100, 194, 310], "behaviour": [100, 166, 167], "usag": [100, 305], "import": [100, 153, 169, 240, 274, 285, 286, 287, 288, 289, 299, 301, 305, 306, 307, 308, 309, 310, 311], "def": [100, 128, 274, 299, 305, 306, 307, 308, 309, 310, 313], "f": [100, 169, 299, 305, 310], "sin": [100, 307, 311], "f_vjp": 100, "primal": [100, 162, 277], "cotang": [100, 277], "cotan": 100, "co": [100, 307], "f_jvp": 100, "dx": 100, "dy": 100, "f_vmap": 100, "ai": 100, "swapax": 100, "angl": [103, 217], "radian": 103, "bias": [104, 126, 149, 215, 216], "group_siz": [104, 126, 149, 215, 216, 282], "bit": [104, 126, 149, 163, 215, 216, 234, 282, 292], "4": [104, 126, 128, 144, 149, 169, 215, 216, 240, 282, 288, 292, 305, 306, 308, 311, 313], "configur": [104, 126, 306], "formal": [104, 126, 215], "notat": [104, 126, 285], "quantiz": [104, 126, 149, 174, 216], "we": [104, 126, 149, 215, 216, 299, 302, 304, 305, 306, 307, 309, 313], "w_i": [104, 126, 215], "hat": [104, 126, 215], "per": [104, 126, 149, 215, 216, 282, 305, 306, 309], "bia": [104, 126, 127, 149, 215, 216, 286, 299, 307], "occupi": [104, 126, 149, 215, 216], "version": [104, 126, 179, 183, 215, 248, 278, 302, 307, 308], "d": [91, 105, 106, 155, 169, 184, 188, 210, 262, 269, 271, 272, 273, 289, 313], "determin": [106, 128, 223, 288, 292, 312], "subarrai": [106, 250], "origin": [106, 284, 310], "remov": [106, 184, 219, 253], "insert": [106, 123, 313], "end": [106, 167, 194, 215], "neg": [106, 144, 159, 204, 269, 308], "first": [106, 109, 144, 150, 161, 163, 171, 180, 182, 184, 212, 227, 234, 260, 266, 269, 274, 285, 287, 288, 299, 305, 307, 310, 313], "sub": [106, 227, 269, 282], "taken": [106, 262, 269], "second": [106, 161, 163, 180, 182, 184, 234, 260, 269, 274, 307, 313], "global": [107, 109, 110, 111, 117, 226, 284, 302, 305], "disabl": [107, 196, 305], "environ": [107, 117, 306], "mlx_disable_compil": [107, 117, 305], "repres": [108, 111, 149, 310], "independ": 108, "gather": [109, 148, 149], "concaten": 109, "them": [109, 299, 306, 313], "particip": [109, 110], "strict": [111, 151, 164], "initi": [111, 128, 288, 299, 305, 306, 309], "backend": [111, 112], "case": [111, 134, 137, 138, 140, 141, 142, 143, 144, 166, 167, 168, 170, 171, 172, 184, 233, 253, 305, 307, 311, 312, 313, 314], "is_avail": 111, "runtim": [111, 294, 305, 306], "error": [111, 119, 120, 197, 250, 307, 310], "launch": [111, 306, 308], "divis": [113, 146, 215, 231], "quotient": [113, 114, 146], "remaind": 114, "fuction": 114, "faster": [114, 305, 307], "subscript": [115, 116], "operand": [115, 116, 148], "einstein": [115, 116], "summat": [115, 116], "equat": [115, 116], "contract": 116, "einsum": 116, "path": [116, 198, 240, 241, 282, 287, 306], "string": [116, 128, 190, 211, 310, 312], "inform": [116, 190, 238, 239, 292, 299, 307, 313], "about": [116, 190, 309, 313], "chosen": 116, "overrid": 117, "mathrm": [119, 244], "frac": [119, 215, 244], "sqrt": [119, 131, 153, 305], "pi": [119, 307], "int_0": 119, "t": [119, 128, 131, 149, 166, 167, 216, 274, 299, 305, 307, 313], "dt": 119, "erf": [120, 305], "singl": [121, 162, 174, 188, 211, 277, 305, 308, 312], "leav": [121, 286, 287, 288], "exponenti": [122, 124], "minu": 124, "exp": [124, 128, 179, 183, 220, 248, 305, 313], "precis": [124, 131, 299, 305], "small": [124, 127, 129, 305, 306, 313], "column": [125, 154, 215], "where": [125, 156, 167, 215, 274, 278, 306, 307, 308], "zero": [125, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 188, 195, 271, 272, 273, 281, 299, 301, 308], "whose": [125, 282, 283], "ep": [127, 129, 301], "normal": [127, 128, 129, 223, 228, 299, 310, 313], "respect": [127, 129, 148, 149, 150, 215, 274, 286, 299, 307, 311], "happen": [127, 301, 305, 309], "ad": [127, 306, 309, 312], "translat": 127, "constant": [127, 129, 211, 299, 305, 310], "numer": [127, 129, 169, 179, 183, 248, 305, 309], "stabil": [127, 129], "jit": 128, "name": [128, 149, 174, 215, 216, 238, 239, 240, 241, 299, 306, 308, 312], "ensure_row_contigu": 128, "code": [128, 305, 306, 309], "bodi": 128, "signatur": 128, "output_shap": 128, "output_dtyp": 128, "whether": [128, 149, 172, 216], "ensur": [128, 284, 306], "exp_elementwis": 128, "uint": 128, "elem": 128, "thread_position_in_grid": 128, "tmp": 128, "inp": 128, "myexp": 128, "templat": 128, "grid": [128, 188], "threadgroup": 128, "256": 128, "verbos": 128, "16": [128, 292], "astyp": [128, 310], "assert": 128, "allclos": 128, "root": [129, 236, 251], "mean": [129, 222, 223, 224, 274, 299, 305, 307, 310], "squar": [129, 154, 168, 172, 236, 251, 274, 286, 299, 307, 310], "rm": 129, "norm": [129, 284], "dim": [130, 131], "tradit": 130, "base": [130, 169, 176, 178, 213, 301, 302, 305, 308], "freq": 130, "rotari": 130, "encod": 130, "rotat": 130, "larger": 130, "rest": [130, 286, 287], "left": [130, 163, 169, 215], "unchang": [130, 256], "choos": 130, "implement": [130, 131, 169, 305, 307], "consecut": [130, 215], "angular": 130, "frequenc": 130, "exactli": [130, 307], "q": [131, 170], "head": 131, "attent": 131, "o": 131, "softmax": [131, 299], "queri": 131, "pre": 131, "tile": 131, "match": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 191, 306, 308, 310], "kei": [131, 190, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 285, 286, 302, 304, 307], "typic": [131, 301, 305, 309], "score": 131, "One": [132, 135, 141, 211, 236, 305, 307], "fourier": [132, 133, 134, 135, 136, 137, 141, 142, 143], "truncat": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 228], "dft": [132, 133, 134, 135, 136, 137, 141, 142, 143], "len": [134, 137, 140, 143, 153], "rfft": 138, "real": [138, 139, 140, 141, 142, 143, 166, 167], "rfft2": 139, "treat": [139, 140, 142, 143, 262, 305], "rfftn": 140, "silent": [141, 142, 143], "outsid": 144, "clamp": 144, "ndim": [144, 169, 171], "3": [91, 144, 161, 169, 170, 284, 288, 302, 305, 308, 310, 311], "floor": 146, "fill": [147, 209, 271, 281], "lhs_indic": [148, 149], "rhs_indic": [148, 149], "level": [148, 149], "explicitli": [148, 299, 302], "matmul": [148, 313], "flat": [148, 149, 285, 289], "a1": 148, "a2": 148, "AS": 148, "b1": 148, "b2": 148, "gather_mm": 149, "similar": [149, 161, 286, 310, 312], "sinc": [149, 193, 310, 313], "pack": [149, 215, 216], "unsign": [149, 215, 216, 292], "argnum": [150, 274, 307], "argnam": [150, 274], "neither": [150, 274], "nor": [150, 274], "keyword": [150, 240, 241, 274, 286, 299, 302, 312, 314], "It": [150, 243, 274, 284, 288, 299, 310, 312], "so": [150, 153, 274, 301, 305, 306, 309, 313], "walsh": 153, "hadamard": 153, "final": 153, "scipi": 153, "linalg": 153, "12": 153, "20": [153, 169], "28": 153, "8192": 153, "16384": 153, "orthonorm": 153, "ordinari": 155, "higher": [155, 307], "inifn": 157, "infin": [157, 159, 160, 204], "arg1": 161, "dtypecategori": [161, 292], "arg2": 161, "subtyp": [161, 292], "subdtyp": 161, "float64": 161, "conveni": 161, "allow": [161, 284, 299, 306, 308, 311], "too": [161, 305, 309], "jacobian": [162, 277, 311], "shift": [163, 234], "upper": [166, 167, 172, 215, 225, 228, 229], "decomposit": [166, 167, 171], "semi": [166, 167, 223], "triangular": [166, 167, 172], "lower": [166, 167, 172, 215, 225, 228, 229, 271], "l": [166, 167, 299], "dot": [166, 168, 172, 266, 285], "u": [166, 171, 309], "choleski": 167, "let": [167, 305, 307, 309, 310], "mathbf": 167, "its": [167, 184, 212, 227, 271, 283, 289, 299, 301, 306, 310, 313], "align": [167, 215], "ainv": [168, 172], "ey": [168, 172], "ord": 169, "tabl": [169, 292], "under": 169, "frobeniu": 169, "matric": [169, 170, 171], "strictli": 169, "speak": 169, "mathemat": 169, "mai": [169, 282, 306, 307, 308], "still": [169, 305, 309], "variou": 169, "purpos": 169, "calcul": 169, "fro": 169, "inf": [169, 204], "max": [169, 186, 305, 307, 313], "min": [169, 201], "below": [169, 271, 273, 292, 309], "largest": [169, 204, 268], "sing": 169, "smallest": 169, "singular": [169, 171], "nuclear": 169, "yet": [169, 299, 307, 308, 309, 311], "_f": 169, "sum_": 169, "j": 169, "a_": 169, "rais": [169, 197, 213, 250], "valueerror": [169, 307], "refer": [169, 308], "golub": 169, "van": 169, "loan": 169, "baltimor": 169, "md": 169, "john": 169, "hopkin": 169, "univers": 169, "press": 169, "1985": 169, "pg": 169, "15": [169, 288, 305], "la": 169, "arang": [169, 292, 308, 310], "9": [169, 310], "reshap": [169, 308], "7": [169, 215, 308], "74597": 169, "6": [169, 240, 305, 308, 311], "5": [169, 197, 218, 288, 301, 305, 307, 308], "84804": 169, "41421": 169, "23607": [169, 170], "74166": 169, "24264": 169, "8": [169, 215, 292, 305, 308, 311, 313], "11": 169, "225": 169, "r": [170, 274], "894427": 170, "447214": 170, "57771": 170, "iter": [171, 286, 287, 302, 305, 309], "combin": [171, 288], "vt": 171, "diag": 171, "num": [173, 227], "50": 173, "evenli": 173, "space": 173, "sampl": [173, 218, 219, 220, 222, 223, 225, 228, 229, 302, 305], "file": [174, 237, 238, 239, 240, 241, 306, 307, 312], "format": [174, 237, 238, 239, 240, 241, 310], "return_metadata": 174, "binari": [174, 237, 238, 239, 240, 241, 276, 305], "npy": [174, 237, 312], "npz": [174, 240, 241, 312], "safetensor": [174, 239, 301, 309, 312], "gguf": [174, 238, 312], "metadata": [174, 238, 239], "matadata": 174, "unsupport": 174, "tensor": [174, 266, 310], "natur": [175, 177, 309], "logarithm": [175, 176, 177, 178], "10": [176, 235, 240, 286, 299, 305, 306, 308], "log": [177, 179, 183], "plu": 177, "stabl": [179, 183, 248], "logic": [180, 181, 182], "prepend": 184, "make": [184, 206, 243, 299, 305, 309, 311, 313], "similarli": [184, 307, 309], "append": [184, 305, 309], "spars": 188, "xy": 188, "multidimension": 188, "coordin": 188, "non": 188, "dens": [188, 313], "cartesian": 188, "ij": 188, "clear": 189, "cach": [189, 191, 192, 196, 305], "get_cache_memori": 189, "system": [190, 191, 192], "architectur": [190, 299, 313], "max_buffer_s": 190, "max_recommended_working_set_s": 190, "memory_s": 190, "activ": [191, 305], "report": [191, 197], "becaus": [191, 299, 309], "doe": [191, 276, 284, 299, 305, 308, 309, 310], "buffer": [191, 310], "been": [192, 309], "alloc": [192, 196, 197], "peak": [193, 195], "amount": 193, "record": [193, 309], "program": [193, 306], "reset_peak_memori": 193, "reset": 195, "free": 196, "reclaim": 196, "next": 196, "To": [196, 299, 301, 305, 306, 307, 311], "set_memory_limit": 196, "previou": [196, 197], "relax": 197, "wait": 197, "schedul": [197, 301, 313], "task": 197, "complet": [197, 307, 313], "exceed": 197, "potenti": 197, "time": [197, 267, 299, 305, 307, 309, 313], "recommend": 197, "work": [197, 305, 306, 307, 308, 309], "gputrac": 198, "move": [202, 313], "posinf": 204, "neginf": 204, "replac": 204, "finit": 204, "negat": 205, "ones": [209, 240, 271, 301, 306, 308], "op": [210, 276, 309], "beforehand": 210, "pad_width": 211, "liter": 211, "constant_valu": 211, "before_1": 211, "after_1": 211, "before_2": 211, "after_2": 211, "before_n": 211, "after_n": 211, "pair": 211, "before_i": 211, "after_i": 211, "extend": 211, "side": [211, 305], "smaller": [212, 305], "everi": [215, 286, 301, 307], "togeth": [215, 286, 287, 306], "henc": [215, 305], "particular": 215, "w_1": 215, "w_g": 215, "represent": [215, 276, 285, 289], "max_i": 215, "min_i": 215, "textrm": 215, "round": 215, "right": [215, 234], "abov": [215, 272, 299, 306, 307, 308, 309, 313], "fit": [215, 313], "1st": 215, "signific": 215, "2nd": 215, "etc": [215, 299, 306], "abl": 215, "dequant": 215, "w_q": 215, "degre": 217, "p": [218, 299], "prng": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 302], "logit": [219, 305], "num_sampl": 219, "unnorm": 219, "most": [219, 299, 305, 306, 307, 308, 309], "compat": [219, 223, 312], "draw": 219, "cdf": 220, "accord": [220, 279, 282], "seed": 221, "loc": [222, 224], "cov": 223, "jointli": 223, "covari": 223, "behavior": [223, 308, 309], "empti": 223, "deviat": [224, 255], "low": [225, 229], "high": [225, 229, 299], "probabl": [225, 313], "bound": [225, 228, 229, 305, 308, 313], "roadcast": 225, "domain": [228, 306], "uniformli": 229, "repetit": 232, "while": [233, 309, 310], "preserv": [233, 307], "basic": [235, 307], "reciproc": 236, "arr": [237, 308], "obj": 238, "uncompress": 240, "my_path": 240, "nn": [240, 286, 299, 301, 305, 309], "tree_flatten": [240, 286, 289, 299, 301], "transformerencod": 240, "128": [240, 299], "flat_param": 240, "associ": [240, 241, 309], "compress": 241, "logist": 244, "section": [250, 305, 306, 307], "possibl": [250, 305, 306, 308, 313], "length": 253, "divisor": [255, 275], "varianc": [255, 275], "being": [256, 299], "prevent": [256, 310], "flow": [256, 309], "through": [256, 305, 307, 310], "streamcontext": 257, "context": 257, "manag": [257, 302, 306, 313], "prior": [262, 263], "exclud": 263, "rep": 267, "repeat": 267, "necessarili": 268, "top": 268, "select": [268, 279], "elsewher": [271, 308], "col": 271, "triangl": 271, "loss": [274, 299, 301, 305, 306, 307, 309], "remain": [274, 287, 306], "anyth": [274, 309], "mse": 274, "param": [274, 299, 307], "target": [274, 305], "forward": [274, 305, 309], "lvalu": 274, "dlvalu": 274, "dparam": 274, "grad": [274, 284, 301, 305, 306, 307, 308, 309, 311], "lasso": 274, "l1": 274, "do": [276, 299, 305, 306, 307, 309], "impli": 276, "underli": 276, "gaurante": 276, "in_ax": [278, 307], "out_ax": [278, 307], "prefix": [278, 285], "condit": [279, 313], "modul": [282, 283, 304, 305, 309], "class_pred": 282, "predic": 282, "By": [282, 307, 310], "to_quant": 282, "embed": [282, 299], "core": [282, 299, 301, 305, 306, 310, 311], "receiv": [282, 310], "itself": 282, "fn": [283, 286, 287, 288, 311], "wrt": 283, "trainabl": [283, 299], "max_norm": 284, "clip": 284, "exce": 284, "down": 284, "proportion": 284, "w1": 284, "w2": 284, "clipped_grad": 284, "total_norm": 284, "print": [284, 285, 286, 287, 289, 299, 302, 305, 306, 307, 308, 309, 310, 311], "rescal": 284, "is_leaf": [285, 286, 287, 288], "arbitrari": 285, "depth": [285, 307], "hello": [285, 289], "identifi": [285, 304], "charact": 285, "discard": 285, "collect": [286, 287, 304], "item": [286, 301, 309, 310, 311], "superset": 286, "extra": [286, 287], "closer": 286, "itertool": 286, "starmap": 286, "decid": 286, "what": 286, "constitut": 286, "dict_kei": 286, "lambda": [286, 287, 288, 299, 305, 306, 307], "upon": [286, 287], "tree_map": [287, 299, 306], "new_tre": 287, "_": [287, 299, 302, 305, 309, 313], "accumul": 288, "acc": 288, "recreat": [289, 301], "world": [289, 306], "42": 289, "show": [292, 305], "descript": 292, "int16": 292, "brain": 292, "e8": 292, "m7": 292, "ieee": 292, "e5": 292, "m10": 292, "hierarchi": 292, "mlx": [294, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "packag": [294, 306], "mpi": 294, "librari": [294, 299], "made": 294, "write": [299, 310], "done": [299, 305, 306, 309, 310], "requir": [299, 306, 309, 310], "user": 299, "again": [299, 305], "simpl": [299, 301, 305, 306, 307, 309], "well": [299, 309], "handl": [299, 305], "state": [299, 301, 302, 305], "manual": 299, "solv": 299, "problem": 299, "intuit": 299, "wai": [299, 305, 306, 307, 308], "freez": 299, "finetun": 299, "mlp": [299, 301], "in_dim": 299, "out_dim": 299, "super": 299, "__call__": 299, "enumer": 299, "els": [299, 306, 309], "noth": [299, 309], "lazili": 299, "caus": [299, 305, 309], "thu": 299, "forc": [299, 306, 311], "eval": [299, 301, 305, 306, 307, 309, 311], "doesn": 299, "matter": 299, "how": [299, 305, 308, 313], "local": [299, 306], "scope": 299, "could": 299, "l2_loss": 299, "y_hat": 299, "trainable_paramet": 299, "loss_and_grad": 299, "workhors": 299, "Its": 299, "recurs": 299, "those": 299, "submodul": 299, "public": 299, "member": 299, "track": 299, "frozen": 299, "individu": 299, "larg": [299, 305, 306, 309], "subset": 299, "action": 299, "simplest": [299, 306], "displai": 299, "input_dim": 299, "output_dim": 299, "count": 299, "num_param": 299, "preclud": 299, "pure": [299, 301], "There": [299, 305], "easi": [299, 306], "pattern": [299, 309], "achiev": [299, 306], "other_input": 299, "necessari": 299, "sure": [299, 305], "train": 299, "apply_to_modul": 299, "children": 299, "filter_and_map": 299, "leaf_modul": 299, "load_weight": [299, 309], "named_modul": 299, "save_weight": 299, "set_dtyp": 299, "unfreez": 299, "update_modul": 299, "alibi": 299, "avgpool1d": 299, "avgpool2d": 299, "batchnorm": 299, "conv1d": 299, "conv2d": 299, "conv3d": 299, "dropout": [299, 305], "dropout2d": 299, "dropout3d": 299, "gelu": [299, 305], "glu": 299, "groupnorm": 299, "gru": 299, "hardshrink": 299, "hardtanh": 299, "hardswish": 299, "instancenorm": 299, "layernorm": 299, "leakyrelu": 299, "lstm": 299, "maxpool1d": 299, "maxpool2d": 299, "mish": 299, "multiheadattent": 299, "prelu": 299, "quantizedembed": 299, "quantizedlinear": 299, "rmsnorm": 299, "relu": 299, "relu6": 299, "rnn": 299, "rope": 299, "selu": 299, "sequenti": 299, "silu": 299, "sinusoidalpositionalencod": 299, "softmin": 299, "softshrink": 299, "softsign": 299, "softplu": 299, "tanh": 299, "upsampl": 299, "elu": 299, "gelu_approx": 299, "gelu_fast_approx": 299, "hard_shrink": 299, "hard_tanh": 299, "leaky_relu": 299, "log_sigmoid": 299, "log_softmax": 299, "sigmoid": 299, "binary_cross_entropi": [299, 305], "cosine_similarity_loss": 299, "cross_entropi": 299, "gaussian_nll_loss": 299, "hinge_loss": 299, "huber_loss": 299, "kl_div_loss": 299, "l1_loss": 299, "log_cosh_loss": 299, "margin_ranking_loss": 299, "mse_loss": 299, "nll_loss": 299, "smooth_l1_loss": 299, "triplet_loss": 299, "init": [299, 301, 306], "uniform": [299, 302, 305, 307, 313], "glorot_norm": 299, "glorot_uniform": 299, "he_norm": 299, "he_uniform": 299, "involv": [301, 305], "subsequ": 301, "num_lay": 301, "train_imag": 301, "hidden_dim": 301, "num_class": 301, "loss_and_grad_fn": [301, 305, 307], "loss_fn": [301, 305, 307], "sgd": [301, 305], "learning_r": [301, 305], "num_epoch": 301, "batch_iter": 301, "batch_siz": 301, "train_label": 301, "far": 301, "serial": 301, "here": [301, 305, 307, 309, 312, 313], "tree_unflatten": 301, "adam": 301, "some": [301, 305, 307, 309], "save_safetensor": [301, 312], "later": 301, "checkpoint": 301, "configu": 301, "rate": 301, "good": [301, 305, 306, 313], "rule": 301, "thumb": 301, "apply_gradi": 301, "common": [301, 305, 309], "rmsprop": 301, "adagrad": 301, "adafactor": 301, "adadelta": 301, "adamw": 301, "adamax": 301, "lion": 301, "cosine_decai": 301, "exponential_decai": 301, "join_schedul": 301, "linear_schedul": 301, "step_decai": 301, "implicit": [302, 305, 307], "fine": [302, 309], "grain": 302, "control": [302, 309], "explicit": [302, 310], "uniqu": 302, "pseudo": 302, "altern": 302, "yield": 302, "splittabl": 302, "threefri": 302, "counter": 302, "cycl": 304, "usual": [304, 309], "inherit": 304, "merg": 305, "fuse": 305, "certain": 305, "big": 305, "improv": [305, 306], "awar": [305, 309], "advanc": 305, "36788": 305, "compiled_fun": 305, "slow": 305, "plan": 305, "onc": 305, "stack": 305, "rerun": [305, 309], "avoid": 305, "frequent": [305, 309], "idiom": 305, "watch": 305, "destroi": 305, "anonym": 305, "loop": [305, 306, 307, 309], "don": [305, 313], "nonlinear": 305, "commonli": 305, "unari": 305, "math": 305, "overhead": [305, 309, 313], "bandwidth": [305, 306], "fusibl": 305, "consider": 305, "versu": 305, "ll": [305, 307], "helper": 305, "warm": 305, "synchron": 305, "timeit": [305, 307], "tic": 305, "perf_count": 305, "100": [305, 307, 309, 313], "toc": 305, "tpi": 305, "1e3": 305, "3f": 305, "now": [305, 306, 310], "benchmark": 305, "1000": 305, "4096": [305, 307, 313], "On": [305, 307, 309], "m1": [305, 307, 313], "millisecond": [305, 313], "five": 305, "latest": 305, "help": [305, 313], "won": 305, "trace": 305, "placehold": 305, "content": 305, "insid": 305, "z": [305, 309], "inspect": [305, 311], "disable_compil": 305, "flag": [305, 310], "okai": [305, 309], "though": [305, 309, 310], "intend": 305, "effect": [305, 309], "deal": 305, "simpli": [305, 306, 307], "pretti": [305, 309], "inconveni": 305, "functool": 305, "partial": [305, 309], "tell": [305, 310], "particularli": 305, "reflect": [305, 308, 310], "setup": 305, "backward": [305, 307], "momentum": 305, "squeez": 305, "descent": [305, 309], "put": [305, 306], "appropri": 305, "checkout": 305, "github": 305, "repo": 305, "just": [305, 308], "expect": [305, 308], "grad_fn": [305, 307], "compiled_grad_fn": 305, "71828": 305, "much": [305, 309], "themselv": 305, "practic": 305, "outer": [305, 309], "opportun": 305, "inner": 305, "cost": [306, 309], "across": 306, "physic": 306, "api": [306, 307], "doc": 306, "lot": [306, 307], "figur": 306, "best": 306, "mac": 306, "alreadi": 306, "come": [306, 307], "abil": 306, "talk": 306, "minim": 306, "all_sum": 306, "rank": 306, "mpirun": 306, "mpiexec": 306, "np": [306, 310, 311], "test": 306, "py": 306, "send": 306, "would": [306, 308, 309, 310, 313], "homebrew": 306, "anaconda": 306, "our": 306, "openmpi": 306, "conda": 306, "libmpi": 306, "dyld": 306, "find": 306, "dyld_library_path": 306, "opt": 306, "lib": 306, "connect": 306, "ssh": 306, "checklist": 306, "debug": 306, "issu": [306, 307, 310], "hostnam": 306, "ask": 306, "password": 306, "confirm": 306, "specif": [306, 307], "config": 306, "foo": 306, "bar": 306, "com": 306, "look": 306, "host1": 306, "host2": 306, "qualifi": 306, "ip": 306, "slot": 306, "veri": [306, 309, 313], "want": [306, 307, 313], "ie": 306, "hostfil": 306, "command": 306, "line": [306, 309, 310], "adapt": 306, "parallel": [306, 313], "averag": 306, "snippet": 306, "omit": 306, "dataset": [306, 309], "loss_grad_fn": 306, "all_avg": 306, "everyth": 306, "all_reduce_grad": 306, "thing": 306, "latenc": 306, "mca": 306, "btl_tcp_link": 306, "tcp": 306, "idea": [307, 309], "behind": 307, "further": 307, "dfdx": [307, 308], "deriv": [307, 309], "d2fdx2": 307, "ok": 307, "rather": [307, 313], "zero_grad": 307, "detach": 307, "requires_grad": 307, "saw": 307, "dloss_dw": 307, "dloss_dx": 307, "redund": 307, "continu": 307, "suppos": [307, 313], "nice": [307, 309], "notic": [307, 312], "structur": 307, "propag": [307, 308], "part": [307, 308], "stop_gradi": 307, "autom": 307, "go": 307, "contriv": [307, 313], "sake": 307, "clariti": 307, "quit": [307, 310], "power": [307, 310], "difficult": 307, "hand": [307, 309], "encount": 307, "primit": 307, "your": [307, 309], "priorit": 307, "naiv": 307, "naive_add": 307, "vmap_add": 307, "total": 307, "390": 307, "wherea": 307, "025": 307, "ten": [307, 309], "Of": 307, "cours": 307, "better": [307, 313], "approach": 307, "handi": 307, "slice": 308, "ellipsi": 308, "mix": 308, "take_along_axi": 308, "reason": 308, "lack": 308, "extrem": [308, 309], "ineffici": [308, 309], "someth": 308, "futur": [308, 309], "nonzero": 308, "correct": [308, 309], "describ": 309, "dynam": 309, "easier": 309, "enhanc": 309, "worri": 309, "never": 309, "fun1": 309, "expensive_fun": 309, "care": 309, "built": 309, "benefici": 309, "sai": 309, "instanti": 309, "until": [309, 311], "consum": 309, "eager": 309, "thank": 309, "weights_fp16": 309, "question": 309, "trade": 309, "off": 309, "enough": 309, "bad": 309, "fix": 309, "slight": 309, "grow": 309, "computation": 309, "costli": 309, "luckili": 309, "wide": 309, "thousand": 309, "stochast": 309, "concret": [309, 313], "value_and_grad_fn": 309, "implicitli": 309, "anytim": 309, "memoryview": [309, 310], "perfectli": 309, "first_lay": 309, "second_layer_a": 309, "second_layer_b": 309, "protocol": 310, "dlpack": 310, "pep": 310, "3118": 310, "a_view": 310, "owndata": 310, "own": 310, "extern": 310, "demonstr": 310, "x_view": 310, "modifi": 310, "df": 310, "x\u00b2": 310, "2x": 310, "indirectli": 310, "modif": 310, "seen": 310, "alon": 310, "occur": 310, "incorpor": 310, "aris": 310, "incorrect": 310, "experiment": 310, "break": 310, "advis": 310, "torch": 310, "intermedi": 310, "jnp": 310, "tf": 310, "page": 311, "composit": 311, "archiv": 312, "savez": 312, "savez_compress": 312, "save_gguf": 312, "miss": 312, "arr_0": 312, "direct": 313, "pool": 313, "advantag": 313, "race": 313, "interest": 313, "albeit": 313, "slightli": 313, "d1": 313, "d2": 313, "500": 313, "512": 313, "But": 313, "twice": 313, "were": 313, "measur": 313, "default_stream": 314, "default_devic": 314, "my_devic": 314, "3d": 91}, "objects": {"mlx.core": [[1, 0, 1, "", "Device"], [2, 0, 1, "", "Dtype"], [3, 0, 1, "", "DtypeCategory"], [290, 0, 1, "", "Stream"], [4, 2, 1, "", "abs"], [5, 2, 1, "", "add"], [6, 2, 1, "", "addmm"], [7, 2, 1, "", "all"], [8, 2, 1, "", "allclose"], [9, 2, 1, "", "any"], [10, 2, 1, "", "arange"], [11, 2, 1, "", "arccos"], [12, 2, 1, "", "arccosh"], [13, 2, 1, "", "arcsin"], [14, 2, 1, "", "arcsinh"], [15, 2, 1, "", "arctan"], [16, 2, 1, "", "arctan2"], [17, 2, 1, "", "arctanh"], [18, 2, 1, "", "argmax"], [19, 2, 1, "", "argmin"], [20, 2, 1, "", "argpartition"], [21, 2, 1, "", "argsort"], [22, 0, 1, "", "array"], [73, 2, 1, "", "array_equal"], [74, 2, 1, "", "as_strided"], [75, 2, 1, "", "atleast_1d"], [76, 2, 1, "", "atleast_2d"], [77, 2, 1, "", "atleast_3d"], [78, 2, 1, "", "bitwise_and"], [79, 2, 1, "", "bitwise_or"], [80, 2, 1, "", "bitwise_xor"], [81, 2, 1, "", "block_masked_mm"], [82, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "ceil"], [84, 2, 1, "", "clip"], [85, 2, 1, "", "compile"], [86, 2, 1, "", "concatenate"], [87, 2, 1, "", "conj"], [88, 2, 1, "", "conjugate"], [89, 2, 1, "", "conv1d"], [90, 2, 1, "", "conv2d"], [91, 2, 1, "", "conv3d"], [92, 2, 1, "", "conv_general"], [93, 2, 1, "", "convolve"], [94, 2, 1, "", "cos"], [95, 2, 1, "", "cosh"], [96, 2, 1, "", "cummax"], [97, 2, 1, "", "cummin"], [98, 2, 1, "", "cumprod"], [99, 2, 1, "", "cumsum"], [100, 0, 1, "", "custom_function"], [101, 2, 1, "", "default_device"], [102, 2, 1, "", "default_stream"], [103, 2, 1, "", "degrees"], [104, 2, 1, "", "dequantize"], [105, 2, 1, "", "diag"], [106, 2, 1, "", "diagonal"], [107, 2, 1, "", "disable_compile"], [113, 2, 1, "", "divide"], [114, 2, 1, "", "divmod"], [115, 2, 1, "", "einsum"], [116, 2, 1, "", "einsum_path"], [117, 2, 1, "", "enable_compile"], [118, 2, 1, "", "equal"], [119, 2, 1, "", "erf"], [120, 2, 1, "", "erfinv"], [121, 2, 1, "", "eval"], [122, 2, 1, "", "exp"], [123, 2, 1, "", "expand_dims"], [124, 2, 1, "", "expm1"], [125, 2, 1, "", "eye"], [144, 2, 1, "", "flatten"], [145, 2, 1, "", "floor"], [146, 2, 1, "", "floor_divide"], [147, 2, 1, "", "full"], [148, 2, 1, "", "gather_mm"], [149, 2, 1, "", "gather_qmm"], [150, 2, 1, "", "grad"], [151, 2, 1, "", "greater"], [152, 2, 1, "", "greater_equal"], [153, 2, 1, "", "hadamard_transform"], [154, 2, 1, "", "identity"], [155, 2, 1, "", "inner"], [156, 2, 1, "", "isclose"], [157, 2, 1, "", "isinf"], [158, 2, 1, "", "isnan"], [159, 2, 1, "", "isneginf"], [160, 2, 1, "", "isposinf"], [161, 2, 1, "", "issubdtype"], [162, 2, 1, "", "jvp"], [163, 2, 1, "", "left_shift"], [164, 2, 1, "", "less"], [165, 2, 1, "", "less_equal"], [173, 2, 1, "", "linspace"], [174, 2, 1, "", "load"], [175, 2, 1, "", "log"], [176, 2, 1, "", "log10"], [177, 2, 1, "", "log1p"], [178, 2, 1, "", "log2"], [179, 2, 1, "", "logaddexp"], [180, 2, 1, "", "logical_and"], [181, 2, 1, "", "logical_not"], [182, 2, 1, "", "logical_or"], [183, 2, 1, "", "logsumexp"], [184, 2, 1, "", "matmul"], [185, 2, 1, "", "max"], [186, 2, 1, "", "maximum"], [187, 2, 1, "", "mean"], [188, 2, 1, "", "meshgrid"], [200, 2, 1, "", "min"], [201, 2, 1, "", "minimum"], [202, 2, 1, "", "moveaxis"], [203, 2, 1, "", "multiply"], [204, 2, 1, "", "nan_to_num"], [205, 2, 1, "", "negative"], [206, 2, 1, "", "new_stream"], [207, 2, 1, "", "not_equal"], [208, 2, 1, "", "ones"], [209, 2, 1, "", "ones_like"], [210, 2, 1, "", "outer"], [211, 2, 1, "", "pad"], [212, 2, 1, "", "partition"], [213, 2, 1, "", "power"], [214, 2, 1, "", "prod"], [215, 2, 1, "", "quantize"], [216, 2, 1, "", "quantized_matmul"], [217, 2, 1, "", "radians"], [230, 2, 1, "", "reciprocal"], [231, 2, 1, "", "remainder"], [232, 2, 1, "", "repeat"], [233, 2, 1, "", "reshape"], [234, 2, 1, "", "right_shift"], [235, 2, 1, "", "round"], [236, 2, 1, "", "rsqrt"], [237, 2, 1, "", "save"], [238, 2, 1, "", "save_gguf"], [239, 2, 1, "", "save_safetensors"], [240, 2, 1, "", "savez"], [241, 2, 1, "", "savez_compressed"], [242, 2, 1, "", "set_default_device"], [243, 2, 1, "", "set_default_stream"], [244, 2, 1, "", "sigmoid"], [245, 2, 1, "", "sign"], [246, 2, 1, "", "sin"], [247, 2, 1, "", "sinh"], [248, 2, 1, "", "softmax"], [249, 2, 1, "", "sort"], [250, 2, 1, "", "split"], [251, 2, 1, "", "sqrt"], [252, 2, 1, "", "square"], [253, 2, 1, "", "squeeze"], [254, 2, 1, "", "stack"], [255, 2, 1, "", "std"], [256, 2, 1, "", "stop_gradient"], [257, 2, 1, "", "stream"], [258, 2, 1, "", "subtract"], [259, 2, 1, "", "sum"], [260, 2, 1, "", "swapaxes"], [261, 2, 1, "", "synchronize"], [262, 2, 1, "", "take"], [263, 2, 1, "", "take_along_axis"], [264, 2, 1, "", "tan"], [265, 2, 1, "", "tanh"], [266, 2, 1, "", "tensordot"], [267, 2, 1, "", "tile"], [268, 2, 1, "", "topk"], [269, 2, 1, "", "trace"], [270, 2, 1, "", "transpose"], [271, 2, 1, "", "tri"], [272, 2, 1, "", "tril"], [273, 2, 1, "", "triu"], [274, 2, 1, "", "value_and_grad"], [275, 2, 1, "", "var"], [276, 2, 1, "", "view"], [277, 2, 1, "", "vjp"], [278, 2, 1, "", "vmap"], [279, 2, 1, "", "where"], [280, 2, 1, "", "zeros"], [281, 2, 1, "", "zeros_like"]], "mlx.core.Device": [[1, 1, 1, "", "__init__"]], "mlx.core.Dtype": [[2, 1, 1, "", "__init__"]], "mlx.core.DtypeCategory": [[3, 1, 1, "", "__init__"]], "mlx.core.Stream": [[290, 1, 1, "", "__init__"]], "mlx.core.array": [[23, 3, 1, "", "T"], [22, 1, 1, "", "__init__"], [24, 1, 1, "", "abs"], [25, 1, 1, "", "all"], [26, 1, 1, "", "any"], [27, 1, 1, "", "argmax"], [28, 1, 1, "", "argmin"], [29, 1, 1, "", "astype"], [30, 3, 1, "", "at"], [31, 1, 1, "", "conj"], [32, 1, 1, "", "cos"], [33, 1, 1, "", "cummax"], [34, 1, 1, "", "cummin"], [35, 1, 1, "", "cumprod"], [36, 1, 1, "", "cumsum"], [37, 1, 1, "", "diag"], [38, 1, 1, "", "diagonal"], [39, 3, 1, "", "dtype"], [40, 1, 1, "", "exp"], [41, 1, 1, "", "flatten"], [42, 1, 1, "", "item"], [43, 3, 1, "", "itemsize"], [44, 1, 1, "", "log"], [45, 1, 1, "", "log10"], [46, 1, 1, "", "log1p"], [47, 1, 1, "", "log2"], [48, 1, 1, "", "logsumexp"], [49, 1, 1, "", "max"], [50, 1, 1, "", "mean"], [51, 1, 1, "", "min"], [52, 1, 1, "", "moveaxis"], [53, 3, 1, "", "nbytes"], [54, 3, 1, "", "ndim"], [55, 1, 1, "", "prod"], [56, 1, 1, "", "reciprocal"], [57, 1, 1, "", "reshape"], [58, 1, 1, "", "round"], [59, 1, 1, "", "rsqrt"], [60, 3, 1, "", "shape"], [61, 1, 1, "", "sin"], [62, 3, 1, "", "size"], [63, 1, 1, "", "split"], [64, 1, 1, "", "sqrt"], [65, 1, 1, "", "square"], [66, 1, 1, "", "squeeze"], [67, 1, 1, "", "sum"], [68, 1, 1, "", "swapaxes"], [69, 1, 1, "", "tolist"], [70, 1, 1, "", "transpose"], [71, 1, 1, "", "var"], [72, 1, 1, "", "view"]], "mlx.core.custom_function": [[100, 1, 1, "", "__init__"]], "mlx.core.distributed": [[108, 0, 1, "", "Group"], [109, 2, 1, "", "all_gather"], [110, 2, 1, "", "all_sum"], [111, 2, 1, "", "init"], [112, 2, 1, "", "is_available"]], "mlx.core.distributed.Group": [[108, 1, 1, "", "__init__"]], "mlx.core.fast": [[126, 2, 1, "", "affine_quantize"], [127, 2, 1, "", "layer_norm"], [128, 0, 1, "", "metal_kernel"], [129, 2, 1, "", "rms_norm"], [130, 2, 1, "", "rope"], [131, 2, 1, "", "scaled_dot_product_attention"]], "mlx.core.fast.metal_kernel": [[128, 1, 1, "", "__init__"]], "mlx.core.fft": [[132, 2, 1, "", "fft"], [133, 2, 1, "", "fft2"], [134, 2, 1, "", "fftn"], [135, 2, 1, "", "ifft"], [136, 2, 1, "", "ifft2"], [137, 2, 1, "", "ifftn"], [138, 2, 1, "", "irfft"], [139, 2, 1, "", "irfft2"], [140, 2, 1, "", "irfftn"], [141, 2, 1, "", "rfft"], [142, 2, 1, "", "rfft2"], [143, 2, 1, "", "rfftn"]], "mlx.core.linalg": [[166, 2, 1, "", "cholesky"], [167, 2, 1, "", "cholesky_inv"], [168, 2, 1, "", "inv"], [169, 2, 1, "", "norm"], [170, 2, 1, "", "qr"], [171, 2, 1, "", "svd"], [172, 2, 1, "", "tri_inv"]], "mlx.core.metal": [[189, 2, 1, "", "clear_cache"], [190, 2, 1, "", "device_info"], [191, 2, 1, "", "get_active_memory"], [192, 2, 1, "", "get_cache_memory"], [193, 2, 1, "", "get_peak_memory"], [194, 2, 1, "", "is_available"], [195, 2, 1, "", "reset_peak_memory"], [196, 2, 1, "", "set_cache_limit"], [197, 2, 1, "", "set_memory_limit"], [198, 2, 1, "", "start_capture"], [199, 2, 1, "", "stop_capture"]], "mlx.core.random": [[218, 2, 1, "", "bernoulli"], [219, 2, 1, "", "categorical"], [220, 2, 1, "", "gumbel"], [221, 2, 1, "", "key"], [222, 2, 1, "", "laplace"], [223, 2, 1, "", "multivariate_normal"], [224, 2, 1, "", "normal"], [225, 2, 1, "", "randint"], [226, 2, 1, "", "seed"], [227, 2, 1, "", "split"], [228, 2, 1, "", "truncated_normal"], [229, 2, 1, "", "uniform"]], "mlx.nn": [[282, 2, 1, "", "quantize"], [283, 2, 1, "", "value_and_grad"]], "mlx.optimizers": [[284, 2, 1, "", "clip_grad_norm"]], "mlx.utils": [[285, 2, 1, "", "tree_flatten"], [286, 2, 1, "", "tree_map"], [287, 2, 1, "", "tree_map_with_path"], [288, 2, 1, "", "tree_reduce"], [289, 2, 1, "", "tree_unflatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "instal": [0, 306], "usag": 0, "exampl": [0, 305, 306, 313], "python": 0, "api": 0, "refer": 0, "c": 0, "further": 0, "read": 0, "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 290], "devic": [1, 293], "dtype": [2, 39], "dtypecategori": 3, "ab": [4, 24], "add": 5, "addmm": 6, "all": [7, 25, 306], "allclos": 8, "ani": [9, 26], "arang": 10, "arcco": 11, "arccosh": 12, "arcsin": 13, "arcsinh": 14, "arctan": 15, "arctan2": 16, "arctanh": 17, "argmax": [18, 27], "argmin": [19, 28], "argpartit": 20, "argsort": 21, "arrai": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 291, 308, 312], "t": 23, "astyp": 29, "conj": [31, 87], "co": [32, 94], "cummax": [33, 96], "cummin": [34, 97], "cumprod": [35, 98], "cumsum": [36, 99], "diag": [37, 105], "diagon": [38, 106], "exp": [40, 122], "flatten": [41, 144], "item": 42, "items": 43, "log": [44, 175], "log10": [45, 176], "log1p": [46, 177], "log2": [47, 178], "logsumexp": [48, 183], "max": [49, 185], "mean": [50, 187], "min": [51, 200], "moveaxi": [52, 202], "nbyte": 53, "ndim": 54, "prod": [55, 214], "reciproc": [56, 230], "reshap": [57, 233], "round": [58, 235], "rsqrt": [59, 236], "shape": 60, "sin": [61, 246], "size": 62, "split": [63, 227, 250], "sqrt": [64, 251], "squar": [65, 252], "squeez": [66, 253], "sum": [67, 259], "swapax": [68, 260], "tolist": 69, "transpos": [70, 270], "var": [71, 275], "view": [72, 276], "array_equ": 73, "as_strid": 74, "atleast_1d": 75, "atleast_2d": 76, "atleast_3d": 77, "bitwise_and": 78, "bitwise_or": 79, "bitwise_xor": 80, "block_masked_mm": 81, "broadcast_to": 82, "ceil": 83, "clip": 84, "compil": [85, 305], "concaten": 86, "conjug": 88, "conv1d": 89, "conv2d": 90, "conv_gener": 92, "convolv": 93, "cosh": 95, "custom_funct": 100, "default_devic": 101, "default_stream": 102, "degre": 103, "dequant": 104, "disable_compil": 107, "distribut": [108, 109, 110, 111, 112, 294, 306], "group": 108, "all_gath": 109, "all_sum": 110, "init": 111, "is_avail": [112, 194], "divid": 113, "divmod": 114, "einsum": 115, "einsum_path": 116, "enable_compil": 117, "equal": 118, "erf": 119, "erfinv": 120, "eval": 121, "expand_dim": 123, "expm1": 124, "ey": 125, "fast": [126, 127, 128, 129, 130, 131, 295], "affine_quant": 126, "layer_norm": 127, "metal_kernel": 128, "rms_norm": 129, "rope": 130, "scaled_dot_product_attent": 131, "fft": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 296], "fft2": 133, "fftn": 134, "ifft": 135, "ifft2": 136, "ifftn": 137, "irfft": 138, "irfft2": 139, "irfftn": 140, "rfft": 141, "rfft2": 142, "rfftn": 143, "floor": 145, "floor_divid": 146, "full": 147, "gather_mm": 148, "gather_qmm": 149, "grad": [150, 299], "greater": 151, "greater_equ": 152, "hadamard_transform": 153, "ident": 154, "inner": 155, "isclos": 156, "isinf": 157, "isnan": 158, "isneginf": 159, "isposinf": 160, "issubdtyp": 161, "jvp": 162, "left_shift": 163, "less": 164, "less_equ": 165, "linalg": [166, 167, 168, 169, 170, 171, 172], "choleski": 166, "cholesky_inv": 167, "inv": 168, "norm": 169, "qr": 170, "svd": 171, "tri_inv": 172, "linspac": 173, "load": [174, 301, 312], "logaddexp": 179, "logical_and": 180, "logical_not": 181, "logical_or": 182, "matmul": 184, "maximum": 186, "meshgrid": 188, "metal": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 298], "clear_cach": 189, "device_info": 190, "get_active_memori": 191, "get_cache_memori": 192, "get_peak_memori": 193, "reset_peak_memori": 195, "set_cache_limit": 196, "set_memory_limit": 197, "start_captur": 198, "stop_captur": 199, "minimum": 201, "multipli": 203, "nan_to_num": 204, "neg": 205, "new_stream": 206, "not_equ": 207, "ones": 208, "ones_lik": 209, "outer": 210, "pad": 211, "partit": 212, "power": 213, "quantiz": [215, 282], "quantized_matmul": 216, "radian": 217, "random": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 302], "bernoulli": 218, "categor": 219, "gumbel": 220, "kei": 221, "laplac": 222, "multivariate_norm": 223, "normal": 224, "randint": 225, "seed": 226, "truncated_norm": 228, "uniform": 229, "remaind": 231, "repeat": 232, "right_shift": 234, "save": [237, 301, 312], "save_gguf": 238, "save_safetensor": 239, "savez": 240, "savez_compress": 241, "set_default_devic": 242, "set_default_stream": 243, "sigmoid": 244, "sign": 245, "sinh": 247, "softmax": 248, "sort": 249, "stack": 254, "std": 255, "stop_gradi": 256, "stream": [257, 290, 293, 314], "subtract": 258, "synchron": 261, "take": 262, "take_along_axi": 263, "tan": 264, "tanh": 265, "tensordot": 266, "tile": 267, "topk": 268, "trace": 269, "tri": 271, "tril": 272, "triu": 273, "value_and_grad": [274, 283], "vjp": 277, "vmap": 278, "where": 279, "zero": 280, "zeros_lik": 281, "nn": [282, 283], "optim": [284, 301], "clip_grad_norm": 284, "util": [285, 286, 287, 288, 289, 304], "tree_flatten": 285, "tree_map": 286, "tree_map_with_path": 287, "tree_reduc": 288, "tree_unflatten": 289, "data": 292, "type": 292, "support": 292, "commun": [294, 306], "linear": 297, "algebra": 297, "neural": 299, "network": 299, "quick": [299, 311], "start": [299, 306, 311], "The": 299, "modul": 299, "class": 299, "paramet": 299, "updat": [299, 308], "inspect": 299, "valu": 299, "oper": 300, "transform": [303, 305, 307, 309, 311], "tree": 304, "basic": [305, 311], "speedup": 305, "debug": 305, "pure": 305, "function": [305, 307, 311], "train": [305, 306], "graph": [305, 309, 311], "get": 306, "mpi": 306, "set": 306, "up": 306, "remot": 306, "host": 306, "tune": 306, "reduc": 306, "automat": 307, "differenti": 307, "vector": 307, "index": 308, "differ": 308, "from": 308, "numpi": [308, 310], "In": 308, "place": 308, "lazi": 309, "evalu": 309, "why": 309, "comput": 309, "onli": 309, "what": 309, "you": 309, "us": [309, 314], "when": 309, "convers": 310, "other": 310, "framework": 310, "pytorch": 310, "jax": 310, "tensorflow": 310, "guid": 311, "serial": 312, "format": 312, "unifi": 313, "memori": 313, "A": 313, "simpl": 313, "specifi": 314, "conv3d": 91}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"MLX": [[0, "mlx"]], "Install": [[0, null]], "Usage": [[0, null]], "Examples": [[0, null]], "Python API Reference": [[0, null]], "C++ API Reference": [[0, null]], "Further Reading": [[0, null]], "Array": [[291, "array"]], "Data Types": [[292, "data-types"]], "Supported Data Types": [[292, "id2"]], "Devices and Streams": [[293, "devices-and-streams"]], "Distributed Communication": [[294, "distributed-communication"], [306, "distributed-communication"]], "Fast": [[295, "fast"]], "FFT": [[296, "fft"]], "Linear Algebra": [[297, "linear-algebra"]], "Metal": [[298, "metal"]], "Neural Networks": [[299, "neural-networks"]], "Quick Start with Neural Networks": [[299, "quick-start-with-neural-networks"]], "The Module Class": [[299, "the-module-class"]], "Parameters": [[299, "parameters"]], "Updating the Parameters": [[299, "updating-the-parameters"]], "Inspecting Modules": [[299, "inspecting-modules"]], "Value and Grad": [[299, "value-and-grad"]], "Optimizers": [[301, "optimizers"]], "Saving and Loading": [[301, "saving-and-loading"]], "Random": [[302, "random"]], "Transforms": [[303, "transforms"]], "Tree Utils": [[304, "tree-utils"]], "Compilation": [[305, "compilation"]], "Basics of Compile": [[305, "basics-of-compile"]], "Example Speedup": [[305, "example-speedup"]], "Debugging": [[305, "debugging"]], "Pure Functions": [[305, "pure-functions"]], "Compiling Training Graphs": [[305, "compiling-training-graphs"]], "Transformations with Compile": [[305, "transformations-with-compile"]], "Getting Started": [[306, "getting-started"]], "Installing MPI": [[306, "installing-mpi"]], "Setting up Remote Hosts": [[306, "setting-up-remote-hosts"]], "Training Example": [[306, "training-example"]], "Tuning All Reduce": [[306, "tuning-all-reduce"]], "Function Transforms": [[307, "function-transforms"]], "Automatic Differentiation": [[307, "automatic-differentiation"]], "Automatic Vectorization": [[307, "automatic-vectorization"]], "Indexing Arrays": [[308, "indexing-arrays"]], "Differences from NumPy": [[308, "differences-from-numpy"]], "In Place Updates": [[308, "in-place-updates"]], "Lazy Evaluation": [[309, "lazy-evaluation"]], "Why Lazy Evaluation": [[309, "why-lazy-evaluation"]], "Transforming Compute Graphs": [[309, "transforming-compute-graphs"]], "Only Compute What You Use": [[309, "only-compute-what-you-use"]], "When to Evaluate": [[309, "when-to-evaluate"]], "Conversion to NumPy and Other Frameworks": [[310, "conversion-to-numpy-and-other-frameworks"]], "PyTorch": [[310, "pytorch"]], "JAX": [[310, "jax"]], "TensorFlow": [[310, "tensorflow"]], "Quick Start Guide": [[311, "quick-start-guide"]], "Basics": [[311, "basics"]], "Function and Graph Transformations": [[311, "function-and-graph-transformations"]], "Saving and Loading Arrays": [[312, "saving-and-loading-arrays"]], "Serialization Formats": [[312, "id1"]], "Unified Memory": [[313, "unified-memory"]], "A Simple Example": [[313, "a-simple-example"]], "Using Streams": [[314, "using-streams"]], "Specifying the Stream": [[314, "specifying-the-stream"]], "mlx.core.Device": [[1, "mlx-core-device"]], "mlx.core.Dtype": [[2, "mlx-core-dtype"]], "mlx.core.DtypeCategory": [[3, "mlx-core-dtypecategory"]], "mlx.core.abs": [[4, "mlx-core-abs"]], "mlx.core.add": [[5, "mlx-core-add"]], "mlx.core.addmm": [[6, "mlx-core-addmm"]], "mlx.core.all": [[7, "mlx-core-all"]], "mlx.core.allclose": [[8, "mlx-core-allclose"]], "mlx.core.any": [[9, "mlx-core-any"]], "mlx.core.arange": [[10, "mlx-core-arange"]], "mlx.core.arccos": [[11, "mlx-core-arccos"]], "mlx.core.arccosh": [[12, "mlx-core-arccosh"]], "mlx.core.arcsin": [[13, "mlx-core-arcsin"]], "mlx.core.arcsinh": [[14, "mlx-core-arcsinh"]], "mlx.core.arctan": [[15, "mlx-core-arctan"]], "mlx.core.arctan2": [[16, "mlx-core-arctan2"]], "mlx.core.arctanh": [[17, "mlx-core-arctanh"]], "mlx.core.argmax": [[18, "mlx-core-argmax"]], "mlx.core.argmin": [[19, "mlx-core-argmin"]], "mlx.core.argpartition": [[20, "mlx-core-argpartition"]], "mlx.core.argsort": [[21, "mlx-core-argsort"]], "mlx.core.array": [[22, "mlx-core-array"]], "mlx.core.array.T": [[23, "mlx-core-array-t"]], "mlx.core.array.abs": [[24, "mlx-core-array-abs"]], "mlx.core.array.all": [[25, "mlx-core-array-all"]], "mlx.core.array.any": [[26, "mlx-core-array-any"]], "mlx.core.array.argmax": [[27, "mlx-core-array-argmax"]], "mlx.core.array.argmin": [[28, "mlx-core-array-argmin"]], "mlx.core.array.astype": [[29, "mlx-core-array-astype"]], "mlx.core.array.at": [[30, "mlx-core-array-at"]], "mlx.core.array.conj": [[31, "mlx-core-array-conj"]], "mlx.core.array.cos": [[32, "mlx-core-array-cos"]], "mlx.core.array.cummax": [[33, "mlx-core-array-cummax"]], "mlx.core.array.cummin": [[34, "mlx-core-array-cummin"]], "mlx.core.array.cumprod": [[35, "mlx-core-array-cumprod"]], "mlx.core.array.cumsum": [[36, "mlx-core-array-cumsum"]], "mlx.core.array.diag": [[37, "mlx-core-array-diag"]], "mlx.core.array.diagonal": [[38, "mlx-core-array-diagonal"]], "mlx.core.array.dtype": [[39, "mlx-core-array-dtype"]], "mlx.core.array.exp": [[40, "mlx-core-array-exp"]], "mlx.core.array.flatten": [[41, "mlx-core-array-flatten"]], "mlx.core.array.item": [[42, "mlx-core-array-item"]], "mlx.core.array.itemsize": [[43, "mlx-core-array-itemsize"]], "mlx.core.array.log": [[44, "mlx-core-array-log"]], "mlx.core.array.log10": [[45, "mlx-core-array-log10"]], "mlx.core.array.log1p": [[46, "mlx-core-array-log1p"]], "mlx.core.array.log2": [[47, "mlx-core-array-log2"]], "mlx.core.array.logsumexp": [[48, "mlx-core-array-logsumexp"]], "mlx.core.array.max": [[49, "mlx-core-array-max"]], "mlx.core.array.mean": [[50, "mlx-core-array-mean"]], "mlx.core.array.min": [[51, "mlx-core-array-min"]], "mlx.core.array.moveaxis": [[52, "mlx-core-array-moveaxis"]], "mlx.core.array.nbytes": [[53, "mlx-core-array-nbytes"]], "mlx.core.array.ndim": [[54, "mlx-core-array-ndim"]], "mlx.core.array.prod": [[55, "mlx-core-array-prod"]], "mlx.core.array.reciprocal": [[56, "mlx-core-array-reciprocal"]], "mlx.core.array.reshape": [[57, "mlx-core-array-reshape"]], "mlx.core.array.round": [[58, "mlx-core-array-round"]], "mlx.core.array.rsqrt": [[59, "mlx-core-array-rsqrt"]], "mlx.core.array.shape": [[60, "mlx-core-array-shape"]], "mlx.core.array.sin": [[61, "mlx-core-array-sin"]], "mlx.core.array.size": [[62, "mlx-core-array-size"]], "mlx.core.array.split": [[63, "mlx-core-array-split"]], "mlx.core.array.sqrt": [[64, "mlx-core-array-sqrt"]], "mlx.core.array.square": [[65, "mlx-core-array-square"]], "mlx.core.array.squeeze": [[66, "mlx-core-array-squeeze"]], "mlx.core.array.sum": [[67, "mlx-core-array-sum"]], "mlx.core.array.swapaxes": [[68, "mlx-core-array-swapaxes"]], "mlx.core.array.tolist": [[69, "mlx-core-array-tolist"]], "mlx.core.array.transpose": [[70, "mlx-core-array-transpose"]], "mlx.core.array.var": [[71, "mlx-core-array-var"]], "mlx.core.array.view": [[72, "mlx-core-array-view"]], "mlx.core.array_equal": [[73, "mlx-core-array-equal"]], "mlx.core.as_strided": [[74, "mlx-core-as-strided"]], "mlx.core.atleast_1d": [[75, "mlx-core-atleast-1d"]], "mlx.core.atleast_2d": [[76, "mlx-core-atleast-2d"]], "mlx.core.atleast_3d": [[77, "mlx-core-atleast-3d"]], "mlx.core.bitwise_and": [[78, "mlx-core-bitwise-and"]], "mlx.core.bitwise_or": [[79, "mlx-core-bitwise-or"]], "mlx.core.bitwise_xor": [[80, "mlx-core-bitwise-xor"]], "mlx.core.block_masked_mm": [[81, "mlx-core-block-masked-mm"]], "mlx.core.broadcast_to": [[82, "mlx-core-broadcast-to"]], "mlx.core.ceil": [[83, "mlx-core-ceil"]], "mlx.core.clip": [[84, "mlx-core-clip"]], "mlx.core.compile": [[85, "mlx-core-compile"]], "mlx.core.concatenate": [[86, "mlx-core-concatenate"]], "mlx.core.conj": [[87, "mlx-core-conj"]], "mlx.core.conjugate": [[88, "mlx-core-conjugate"]], "mlx.core.conv1d": [[89, "mlx-core-conv1d"]], "mlx.core.conv2d": [[90, "mlx-core-conv2d"]], "mlx.core.conv_general": [[92, "mlx-core-conv-general"]], "mlx.core.convolve": [[93, "mlx-core-convolve"]], "mlx.core.cos": [[94, "mlx-core-cos"]], "mlx.core.cosh": [[95, "mlx-core-cosh"]], "mlx.core.cummax": [[96, "mlx-core-cummax"]], "mlx.core.cummin": [[97, "mlx-core-cummin"]], "mlx.core.cumprod": [[98, "mlx-core-cumprod"]], "mlx.core.cumsum": [[99, "mlx-core-cumsum"]], "mlx.core.custom_function": [[100, "mlx-core-custom-function"]], "mlx.core.default_device": [[101, "mlx-core-default-device"]], "mlx.core.default_stream": [[102, "mlx-core-default-stream"]], "mlx.core.degrees": [[103, "mlx-core-degrees"]], "mlx.core.dequantize": [[104, "mlx-core-dequantize"]], "mlx.core.diag": [[105, "mlx-core-diag"]], "mlx.core.diagonal": [[106, "mlx-core-diagonal"]], "mlx.core.disable_compile": [[107, "mlx-core-disable-compile"]], "mlx.core.distributed.Group": [[108, "mlx-core-distributed-group"]], "mlx.core.distributed.all_gather": [[109, "mlx-core-distributed-all-gather"]], "mlx.core.distributed.all_sum": [[110, "mlx-core-distributed-all-sum"]], "mlx.core.distributed.init": [[111, "mlx-core-distributed-init"]], "mlx.core.distributed.is_available": [[112, "mlx-core-distributed-is-available"]], "mlx.core.divide": [[113, "mlx-core-divide"]], "mlx.core.divmod": [[114, "mlx-core-divmod"]], "mlx.core.einsum": [[115, "mlx-core-einsum"]], "mlx.core.einsum_path": [[116, "mlx-core-einsum-path"]], "mlx.core.enable_compile": [[117, "mlx-core-enable-compile"]], "mlx.core.equal": [[118, "mlx-core-equal"]], "mlx.core.erf": [[119, "mlx-core-erf"]], "mlx.core.erfinv": [[120, "mlx-core-erfinv"]], "mlx.core.eval": [[121, "mlx-core-eval"]], "mlx.core.exp": [[122, "mlx-core-exp"]], "mlx.core.expand_dims": [[123, "mlx-core-expand-dims"]], "mlx.core.expm1": [[124, "mlx-core-expm1"]], "mlx.core.eye": [[125, "mlx-core-eye"]], "mlx.core.fast.affine_quantize": [[126, "mlx-core-fast-affine-quantize"]], "mlx.core.fast.layer_norm": [[127, "mlx-core-fast-layer-norm"]], "mlx.core.fast.metal_kernel": [[128, "mlx-core-fast-metal-kernel"]], "mlx.core.fast.rms_norm": [[129, "mlx-core-fast-rms-norm"]], "mlx.core.fast.rope": [[130, "mlx-core-fast-rope"]], "mlx.core.fast.scaled_dot_product_attention": [[131, "mlx-core-fast-scaled-dot-product-attention"]], "mlx.core.fft.fft": [[132, "mlx-core-fft-fft"]], "mlx.core.fft.fft2": [[133, "mlx-core-fft-fft2"]], "mlx.core.fft.fftn": [[134, "mlx-core-fft-fftn"]], "mlx.core.fft.ifft": [[135, "mlx-core-fft-ifft"]], "mlx.core.fft.ifft2": [[136, "mlx-core-fft-ifft2"]], "mlx.core.fft.ifftn": [[137, "mlx-core-fft-ifftn"]], "mlx.core.fft.irfft": [[138, "mlx-core-fft-irfft"]], "mlx.core.fft.irfft2": [[139, "mlx-core-fft-irfft2"]], "mlx.core.fft.irfftn": [[140, "mlx-core-fft-irfftn"]], "mlx.core.fft.rfft": [[141, "mlx-core-fft-rfft"]], "mlx.core.fft.rfft2": [[142, "mlx-core-fft-rfft2"]], "mlx.core.fft.rfftn": [[143, "mlx-core-fft-rfftn"]], "mlx.core.flatten": [[144, "mlx-core-flatten"]], "mlx.core.floor": [[145, "mlx-core-floor"]], "mlx.core.floor_divide": [[146, "mlx-core-floor-divide"]], "mlx.core.full": [[147, "mlx-core-full"]], "mlx.core.gather_mm": [[148, "mlx-core-gather-mm"]], "mlx.core.gather_qmm": [[149, "mlx-core-gather-qmm"]], "mlx.core.grad": [[150, "mlx-core-grad"]], "mlx.core.greater": [[151, "mlx-core-greater"]], "mlx.core.greater_equal": [[152, "mlx-core-greater-equal"]], "mlx.core.hadamard_transform": [[153, "mlx-core-hadamard-transform"]], "mlx.core.identity": [[154, "mlx-core-identity"]], "mlx.core.inner": [[155, "mlx-core-inner"]], "mlx.core.isclose": [[156, "mlx-core-isclose"]], "mlx.core.isinf": [[157, "mlx-core-isinf"]], "mlx.core.isnan": [[158, "mlx-core-isnan"]], "mlx.core.isneginf": [[159, "mlx-core-isneginf"]], "mlx.core.isposinf": [[160, "mlx-core-isposinf"]], "mlx.core.issubdtype": [[161, "mlx-core-issubdtype"]], "mlx.core.jvp": [[162, "mlx-core-jvp"]], "mlx.core.left_shift": [[163, "mlx-core-left-shift"]], "mlx.core.less": [[164, "mlx-core-less"]], "mlx.core.less_equal": [[165, "mlx-core-less-equal"]], "mlx.core.linalg.cholesky": [[166, "mlx-core-linalg-cholesky"]], "mlx.core.linalg.cholesky_inv": [[167, "mlx-core-linalg-cholesky-inv"]], "mlx.core.linalg.inv": [[168, "mlx-core-linalg-inv"]], "mlx.core.linalg.norm": [[169, "mlx-core-linalg-norm"]], "mlx.core.linalg.qr": [[170, "mlx-core-linalg-qr"]], "mlx.core.linalg.svd": [[171, "mlx-core-linalg-svd"]], "mlx.core.linalg.tri_inv": [[172, "mlx-core-linalg-tri-inv"]], "mlx.core.linspace": [[173, "mlx-core-linspace"]], "mlx.core.load": [[174, "mlx-core-load"]], "mlx.core.log": [[175, "mlx-core-log"]], "mlx.core.log10": [[176, "mlx-core-log10"]], "mlx.core.log1p": [[177, "mlx-core-log1p"]], "mlx.core.log2": [[178, "mlx-core-log2"]], "mlx.core.logaddexp": [[179, "mlx-core-logaddexp"]], "mlx.core.logical_and": [[180, "mlx-core-logical-and"]], "mlx.core.logical_not": [[181, "mlx-core-logical-not"]], "mlx.core.logical_or": [[182, "mlx-core-logical-or"]], "mlx.core.logsumexp": [[183, "mlx-core-logsumexp"]], "mlx.core.matmul": [[184, "mlx-core-matmul"]], "mlx.core.max": [[185, "mlx-core-max"]], "mlx.core.maximum": [[186, "mlx-core-maximum"]], "mlx.core.mean": [[187, "mlx-core-mean"]], "mlx.core.meshgrid": [[188, "mlx-core-meshgrid"]], "mlx.core.metal.clear_cache": [[189, "mlx-core-metal-clear-cache"]], "mlx.core.metal.device_info": [[190, "mlx-core-metal-device-info"]], "mlx.core.metal.get_active_memory": [[191, "mlx-core-metal-get-active-memory"]], "mlx.core.metal.get_cache_memory": [[192, "mlx-core-metal-get-cache-memory"]], "mlx.core.metal.get_peak_memory": [[193, "mlx-core-metal-get-peak-memory"]], "mlx.core.metal.is_available": [[194, "mlx-core-metal-is-available"]], "mlx.core.metal.reset_peak_memory": [[195, "mlx-core-metal-reset-peak-memory"]], "mlx.core.metal.set_cache_limit": [[196, "mlx-core-metal-set-cache-limit"]], "mlx.core.metal.set_memory_limit": [[197, "mlx-core-metal-set-memory-limit"]], "mlx.core.metal.start_capture": [[198, "mlx-core-metal-start-capture"]], "mlx.core.metal.stop_capture": [[199, "mlx-core-metal-stop-capture"]], "mlx.core.min": [[200, "mlx-core-min"]], "mlx.core.minimum": [[201, "mlx-core-minimum"]], "mlx.core.moveaxis": [[202, "mlx-core-moveaxis"]], "mlx.core.multiply": [[203, "mlx-core-multiply"]], "mlx.core.nan_to_num": [[204, "mlx-core-nan-to-num"]], "mlx.core.negative": [[205, "mlx-core-negative"]], "mlx.core.new_stream": [[206, "mlx-core-new-stream"]], "mlx.core.not_equal": [[207, "mlx-core-not-equal"]], "mlx.core.ones": [[208, "mlx-core-ones"]], "mlx.core.ones_like": [[209, "mlx-core-ones-like"]], "mlx.core.outer": [[210, "mlx-core-outer"]], "mlx.core.pad": [[211, "mlx-core-pad"]], "mlx.core.partition": [[212, "mlx-core-partition"]], "mlx.core.power": [[213, "mlx-core-power"]], "mlx.core.prod": [[214, "mlx-core-prod"]], "mlx.core.quantize": [[215, "mlx-core-quantize"]], "mlx.core.quantized_matmul": [[216, "mlx-core-quantized-matmul"]], "mlx.core.radians": [[217, "mlx-core-radians"]], "mlx.core.random.bernoulli": [[218, "mlx-core-random-bernoulli"]], "mlx.core.random.categorical": [[219, "mlx-core-random-categorical"]], "mlx.core.random.gumbel": [[220, "mlx-core-random-gumbel"]], "mlx.core.random.key": [[221, "mlx-core-random-key"]], "mlx.core.random.laplace": [[222, "mlx-core-random-laplace"]], "mlx.core.random.multivariate_normal": [[223, "mlx-core-random-multivariate-normal"]], "mlx.core.random.normal": [[224, "mlx-core-random-normal"]], "mlx.core.random.randint": [[225, "mlx-core-random-randint"]], "mlx.core.random.seed": [[226, "mlx-core-random-seed"]], "mlx.core.random.split": [[227, "mlx-core-random-split"]], "mlx.core.random.truncated_normal": [[228, "mlx-core-random-truncated-normal"]], "mlx.core.random.uniform": [[229, "mlx-core-random-uniform"]], "mlx.core.reciprocal": [[230, "mlx-core-reciprocal"]], "mlx.core.remainder": [[231, "mlx-core-remainder"]], "mlx.core.repeat": [[232, "mlx-core-repeat"]], "mlx.core.reshape": [[233, "mlx-core-reshape"]], "mlx.core.right_shift": [[234, "mlx-core-right-shift"]], "mlx.core.round": [[235, "mlx-core-round"]], "mlx.core.rsqrt": [[236, "mlx-core-rsqrt"]], "mlx.core.save": [[237, "mlx-core-save"]], "mlx.core.save_gguf": [[238, "mlx-core-save-gguf"]], "mlx.core.save_safetensors": [[239, "mlx-core-save-safetensors"]], "mlx.core.savez": [[240, "mlx-core-savez"]], "mlx.core.savez_compressed": [[241, "mlx-core-savez-compressed"]], "mlx.core.set_default_device": [[242, "mlx-core-set-default-device"]], "mlx.core.set_default_stream": [[243, "mlx-core-set-default-stream"]], "mlx.core.sigmoid": [[244, "mlx-core-sigmoid"]], "mlx.core.sign": [[245, "mlx-core-sign"]], "mlx.core.sin": [[246, "mlx-core-sin"]], "mlx.core.sinh": [[247, "mlx-core-sinh"]], "mlx.core.softmax": [[248, "mlx-core-softmax"]], "mlx.core.sort": [[249, "mlx-core-sort"]], "mlx.core.split": [[250, "mlx-core-split"]], "mlx.core.sqrt": [[251, "mlx-core-sqrt"]], "mlx.core.square": [[252, "mlx-core-square"]], "mlx.core.squeeze": [[253, "mlx-core-squeeze"]], "mlx.core.stack": [[254, "mlx-core-stack"]], "mlx.core.std": [[255, "mlx-core-std"]], "mlx.core.stop_gradient": [[256, "mlx-core-stop-gradient"]], "mlx.core.stream": [[257, "mlx-core-stream"]], "mlx.core.subtract": [[258, "mlx-core-subtract"]], "mlx.core.sum": [[259, "mlx-core-sum"]], "mlx.core.swapaxes": [[260, "mlx-core-swapaxes"]], "mlx.core.synchronize": [[261, "mlx-core-synchronize"]], "mlx.core.take": [[262, "mlx-core-take"]], "mlx.core.take_along_axis": [[263, "mlx-core-take-along-axis"]], "mlx.core.tan": [[264, "mlx-core-tan"]], "mlx.core.tanh": [[265, "mlx-core-tanh"]], "mlx.core.tensordot": [[266, "mlx-core-tensordot"]], "mlx.core.tile": [[267, "mlx-core-tile"]], "mlx.core.topk": [[268, "mlx-core-topk"]], "mlx.core.trace": [[269, "mlx-core-trace"]], "mlx.core.transpose": [[270, "mlx-core-transpose"]], "mlx.core.tri": [[271, "mlx-core-tri"]], "mlx.core.tril": [[272, "mlx-core-tril"]], "mlx.core.triu": [[273, "mlx-core-triu"]], "mlx.core.value_and_grad": [[274, "mlx-core-value-and-grad"]], "mlx.core.var": [[275, "mlx-core-var"]], "mlx.core.view": [[276, "mlx-core-view"]], "mlx.core.vjp": [[277, "mlx-core-vjp"]], "mlx.core.vmap": [[278, "mlx-core-vmap"]], "mlx.core.where": [[279, "mlx-core-where"]], "mlx.core.zeros": [[280, "mlx-core-zeros"]], "mlx.core.zeros_like": [[281, "mlx-core-zeros-like"]], "mlx.nn.quantize": [[282, "mlx-nn-quantize"]], "mlx.nn.value_and_grad": [[283, "mlx-nn-value-and-grad"]], "mlx.optimizers.clip_grad_norm": [[284, "mlx-optimizers-clip-grad-norm"]], "mlx.utils.tree_flatten": [[285, "mlx-utils-tree-flatten"]], "mlx.utils.tree_map": [[286, "mlx-utils-tree-map"]], "mlx.utils.tree_map_with_path": [[287, "mlx-utils-tree-map-with-path"]], "mlx.utils.tree_reduce": [[288, "mlx-utils-tree-reduce"]], "mlx.utils.tree_unflatten": [[289, "mlx-utils-tree-unflatten"]], "mlx.core.Stream": [[290, "mlx-core-stream"]], "mlx.core.conv3d": [[91, "mlx-core-conv3d"]], "Operations": [[300, "operations"]]}, "indexentries": {"conv3d() (in module mlx.core)": [[91, "mlx.core.conv3d"]]}})